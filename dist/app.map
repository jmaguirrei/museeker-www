{"version":3,"sources":["store/actions/changeRoute.js","store/actions/index.js","store/index.js","ui/pages/<Home>/Home.js","ui/Root.js","../config.js","../../../../../libs/client/src/store/methods/get.js","../../../../../libs/client/src/store/methods/subscribe.js","../../../../../libs/client/src/store/methods/set.js","../../../../../libs/client/src/store/methods/setItem.js","../../../../../libs/client/src/store/methods/toggle.js","../../../../../libs/client/src/store/methods/notify.js","../../../../../libs/client/src/store/methods/compute.js","../../../../../libs/client/src/store/methods/computeAll.js","../../../../../libs/client/src/store/methods/emit.js","../../../../../libs/client/src/store/methods/registerComponent.js","../../../../../libs/client/src/store/methods/on.js","../../../../../libs/client/src/store/methods/once.js","../../../../../libs/client/src/store/methods/render.js","../../../../../libs/client/src/store/methods/check.js","../../../../../libs/client/src/store/methods/alertOn.js","../../../../../libs/client/src/store/methods/alertOff.js","../../../../../libs/client/src/store/methods/callServerMethod.js","../../../../../libs/client/src/globals.js","../../../../../libs/client/src/store/db/getDataFromServer.js","../../../../../libs/client/src/store/db/syncDataToDB.js","../../../../../libs/client/src/store/db/getDBMetadata.js","../../../../../libs/client/src/store/db/updateDBControl.js","../../../../../libs/client/src/store/db/getModelData.js","../../../../../libs/client/src/store/db/start.js","../../../../../libs/client/src/store/db/hydrate.js","../../../../../libs/client/src/store/db/query.js","../../../../../libs/client/src/store/db/index.js","../../../../../libs/client/src/store/sockets/initSocket.js","../../../../../libs/client/src/store/sockets/onMessage.js","../../../../../libs/client/src/store/sockets/index.js","../../../../../../../../.npm-packages/lib/node_modules/parcel-bundler/node_modules/process/browser.js","../../../../../libs/client/src/store/lifecycle/connectStoreToServer.js","../../../../../libs/client/src/store/methods/startApp.js","../../../../../libs/client/src/store/methods/index.js","../../../../../libs/client/src/store/queue/addToQueue.js","../../../../../libs/client/src/store/queue/createProcesses.js","../../../../../libs/client/src/store/queue/processOptimistic.js","../../../../../libs/client/src/store/queue/processStep.js","../../../../../libs/client/src/store/queue/processor.js","../../../../../libs/client/src/store/queue/runTask.js","../../../../../libs/client/src/store/queue/index.js","../../../../../libs/client/src/store/lifecycle/createStore.js","../../../../../libs/client/src/store/index.js","../../../../../libs/client/src/ui/styles/registerStyles.js","../../../../../libs/client/node_modules/stylis/stylis.js","../../../../../libs/client/src/ui/styles/processStyle.js","../../../../../libs/client/src/ui/styles/getClasses.js","../../../../../libs/client/src/ui/styles/getStyles.js","../../../../../libs/client/src/ui/styles/index.js","../../../../../libs/client/src/ui/hoc/custom/getFinalProps.js","../../../../../libs/client/src/ui/hoc/custom/getStore.js","../../../../../libs/client/src/ui/hoc/custom/create.js","../../../../../libs/client/src/ui/hoc/createHoc.js","../src/lib/directive.ts","../src/lib/dom.ts","../src/lib/part.ts","../src/lib/template.ts","../src/lib/template-instance.ts","../src/lib/template-result.ts","../src/lib/parts.ts","../src/lib/default-template-processor.ts","../src/lib/template-factory.ts","../src/lib/render.ts","src/lit-html.ts","../src/directives/guard.ts","../src/directives/repeat.ts","../src/directives/unsafe-html.ts","../../../../../libs/client/src/ui/index.js","../../../../../libs/client/src/createClient.js","../../../../../libs/client/src/index.js","app.js"],"names":["args","page","action","steps","domain","method","currentPage","sideEffect","window","history","replaceState","pushState","back","actions","observables","user_id","language","client","hoc","styles","app","render","html","sections","Home","require","default","store","rootComponent","env","development","httpPort","socketPort","baseUrl","baseFolder","useServiceWorker","useManifest","production","get","Store","registerNumber","field","methods","subscribe","objects","observable","findListener","listeners","find","item","console","log","currentListeners","components","push","isPlainValue","v","includes","wasChanged","v1","v2","set","object","Object","keys","forEach","key","previousValue","previousValueClone","Array","isArray","nextValue","warn","notify","setItem","findIndex","x","id","toggle","cb","currentValue","computed","take","compute","flags","IS_MOUNTED","calc","values","map","computeAll","emit","eventStr","cbProps","reactions","filter","keepAlive","done","reaction","callback","currentRegisterNumber","registerComponent","componentDef","definition","instances","on","once","renderer","Comp","props","node","defaultComponent","isString","parentNode","document","getElementById","Component","check","checks","name","str","result","message","alertOn","alerts","obj","rand1000","Math","floor","random","timestamp","Date","now","_id","isVisible","timeout","setTimeout","alertOff","findAlert","callServerMethod","siteUrl","Promise","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","DONE","statusCode","status","responseReturned","responseText","JSON","parse","payloadString","stringify","send","SYSTEM_DB_USER_ID","WINDOW_APP_DATA","GET_MODEL_DATA_METHOD","getDataFromServer","instance","lastTimestamp","localEntitiesIds","requestArgs","globals","then","items","newTimestamp","catch","syncDataToDB","counter","length","modelStore","transaction","objectStore","requestPrevRecords","getAll","onsuccess","previousRecords","attrs","findRecord","rec","put","getDBMetadata","controlStore","requestControlRecords","controlRecords","requestModelKeys","getAllKeys","onerror","updateDBControl","getModelData","requestRecords","start","version","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","request","error","onupgradeneeded","e","target","model","createObjectStore","keyPath","control","getCurrentAttrs","reduce","acum","value","data","query","db","initSocket","socketUrl","onMessage","ws","WebSocket","sendJSON","onopen","isInitial","onclose","onmessage","payload","findEntity","dbValue","cachedSetTimeout","cachedClearTimeout","process","module","exports","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","call","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","len","run","Item","array","noop","nextTick","arguments","i","prototype","apply","title","browser","argv","versions","addListener","off","removeListener","removeAllListeners","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","isBrowser","connectStoreToServer","sockets","startApp","appData","isProduction","scope","registration","user","addToQueue","onError","objToQueue","splice","runTask","createProcesses","processes","singleAction","processOptimistic","isOK","entity","processStep","step","previousArgs","optimistic","resolveOptimistic","response","err","processor","promises","proceed","p","fn","res","task","createStore","undefined","registerStyles","styledRules","innerHTML","indexOf","processStyle","rules","out","substr","getClasses","componentDefClasses","classKeys","mapping","newClassName","getStyles","componentStyles","styleKeys","isFunction","getFinalProps","classesMapping","processedStyles","state","classes","getStore","measure","utils","processedClasses","solveProps","children","finalProps","rendered","createHoc","htmlFn","guard","repeat","unsafeHTML","createClient","lib","fragments","ui","init","onload","jmaguirrei_client","config"],"mappings":"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","file":"app.map","sourceRoot":"../src/client","sourcesContent":["\r\rexport default () => args => {\r\r  const { page, action } = args;\r\r  return {\r    steps: [\r\r      () => ({\r        domain: '_Store_',\r        method: 'set',\r        args: {\r          currentPage: page,\r        },\r        sideEffect: () => {\r          if (action === 'replace') window.history.replaceState(null, null, page);\r          if (action === 'push') window.history.pushState(null, null, page);\r          if (action === 'back') window.history.back();\r        },\r      }),\r    ],\r  };\r\r};\r\r","\r\r\rexport { default as changeRoute } from './changeRoute';\r","\rimport * as actions from './actions';\r\rexport default {\r\r  actions,\r\r  observables: {\r\r    // Domain properties\r    user_id: '',\r    language: 'en',\r\r    // pages\r    currentPage: '', // welcome, signin, signup, forgot\r\r  },\r\r};\r\r\r\r","\r\rexport default client => {\r\r  return client.hoc({\r\r    styles: {\r      app: `\r        font-size: 34px;\r      `,\r    },\r\r    render({ styles }) {\r\r      return client.html`\r        <div id='app' style=${styles.app}>\r          Welcome Home boy ... :)\r        </div>\r      `;\r\r    }\r\r  });\r};\r","\rexport default client => {\r\r  return client.hoc({\r\r    sections: {\r      Home: require('./pages/<Home>/Home.js').default,\r    },\r\r    render({ sections }) {\r\r      return client.html`\r        <div id='page-wrapper'>\r          ${sections.Home()}\r        </div>\r      `;\r\r    }\r\r  });\r\r};\r","\nimport store from '/client/store';\n// import * as lib from '/client/lib';\n// import * as components from '/client/ui/components';\n// import * as fragments from '/client/ui/fragments';\nimport rootComponent from '/client/ui/Root';\n\nexport default {\n\n  client: {\n    store,\n    rootComponent,\n    // lib,\n    // components,\n    // fragments,\n  },\n\n  env: {\n\n    development: {\n      httpPort: 4001,\n      socketPort: null,\n      baseUrl: 'localhost',\n      baseFolder: '',\n      useServiceWorker: false,\n      useManifest: false,\n    },\n\n    production: {\n      httpPort: 4001,\n      socketPort: null,\n      baseUrl: 'museeker.io',\n      baseFolder: 'base-www',\n      useServiceWorker: true,\n      useManifest: false,\n    },\n\n  },\n\n};\n","\r\rexport function get(Store) {\r\r  return registerNumber => field => {\r    Store.methods.subscribe(registerNumber, field);\r    return Store.objects.observables[field];\r  };\r\r}\r\r\r","\rexport function subscribe(Store) {\r\r  return (registerNumber, observable) => {\r    const findListener = Store.objects.listeners.find(item => item.observable === observable);\r    if (!findListener) return console.log(`Listener not found on observable ${observable}`);\r    const currentListeners = findListener.components;\r    const isSubscribed = currentListeners.find(item => item.registerNumber === registerNumber);\r    if (!isSubscribed) currentListeners.push({ registerNumber });\r  };\r\r}\r\r\r","\r\rconst isPlainValue = v => ([ 'string', 'number', 'boolean' ].includes(typeof v));\rconst wasChanged = (v1, v2) => (v1 !== v2);\r\rexport function set(Store) {\r\r  return object => {\r\r    if (!object) return;\r\r    Object.keys(object).forEach(key => {\r\r      const previousValue = Store.objects.observables[key];\r      const previousValueClone = Array.isArray(previousValue)\r        ? [ ...previousValue ]\r        : typeof previousValue === 'object'\r          ? { ...previousValue }\r          : previousValue;\r\r      const nextValue = typeof object[key] === 'function'\r        ? object[key](previousValueClone)\r        : object[key];\r\r      if (typeof previousValue !== typeof nextValue) {\r        console.warn(`Type does not match previous type in ${key}`);\r      } else {\r        const shouldNotify = !isPlainValue(nextValue) ||\r          (isPlainValue(nextValue) && wasChanged(previousValue, nextValue));\r        if (shouldNotify) {\r          Store.objects.observables[key] = nextValue;\r          Store.methods.notify(key);\r        }\r      }\r\r    });\r  };\r\r}\r\r","\r\r\rexport function setItem(Store) {\r\r  return (observable, item) => {\r    const findIndex = Store.objects.observables[observable].findIndex(x => x.id === item.id);\r    Store.objects.observables[observable][findIndex] = item;\r    Store.methods.notify(observable);\r  };\r\r}\r\r","\r\rexport function toggle(Store) {\r\r  return (observable, cb) => {\r    const currentValue = Store.objects.observables[observable];\r    if (typeof currentValue === 'undefined') {\r      console.warn(`Observable [${observable}] does not exists.`);\r    } else if (typeof currentValue !== 'boolean') {\r      console.warn(`Observable [${observable}] is not a boolean.`);\r    } else {\r      Store.methods.set({ [observable]: !currentValue });\r      if (cb) cb(!currentValue);\r    }\r  };\r\r}\r\r\r","\r\rexport function notify(Store) {\r\r  return observable => {\r\r    // Notify computed\r    if (observable) {\r      Object.keys(Store.objects.computed).forEach(key => {\r        const { take } = Store.objects.computed[key];\r        if (take.includes(observable)) Store.methods.compute(key);\r      });\r    }\r\r    // Notify components\r    if (Store.flags.IS_MOUNTED) Store.methods.render();\r    // const findListener = Store.objects.listeners.find(item => item.observable === observable);\r    // if (findListener && findListener.components) {\r    //   findListener.components.forEach(item => {\r    //     const { registerNumber } = item;\r    //     const componentDefinition = Store.objects.components[registerNumber];\r    //     componentDefinition.definition._render();\r    //   });\r    // }\r\r  };\r\r}\r\r","\r\rexport function compute(Store) {\r\r  return key => {\r    const { take, calc } = Store.objects.computed[key];\r    const values = take.map(field => Store.objects.observables[field]);\r    Store.objects.observables[key] = calc(...values);\r  };\r\r}\r\r","\r\rexport function computeAll(Store) {\r\r  return () => {\r    Object.keys(Store.objects.computed).forEach(key => {\r      Store.methods.compute(key);\r    });\r  };\r\r}\r\r","\r\rexport function emit(Store) {\r\r  return (eventStr, cbProps) => {\r\r    if (eventStr === 'MOUNTED') Store.flags.IS_MOUNTED = true;\r\r    const reactions = Store.objects.reactions.filter(item => {\r      if (item.keepAlive) return item.eventStr === eventStr;\r      return item.eventStr === eventStr && !item.done;\r    });\r\r    reactions.forEach(reaction => {\r      reaction.done = true;\r      reaction.callback(cbProps);\r    });\r  };\r\r}\r\r","\rlet currentRegisterNumber = 1000;\r\rexport function registerComponent(Store) {\r\r  return componentDef => {\r    // if (componentDef.id) return componentDef.id;\r    currentRegisterNumber++;\r    Store.objects.components[currentRegisterNumber] = {\r      definition: componentDef,\r      instances: {},\r    };\r    return currentRegisterNumber;\r  };\r\r\r}\r\r\r","\r\rexport function on(Store) {\r\r  return (eventStr, callback) => {\r    Store.objects.reactions.push({ eventStr, callback, keepAlive: true });\r  };\r\r}\r\r","\r\rexport function once(Store) {\r\r  return (eventStr, callback) => {\r    Store.objects.reactions.push({ eventStr, callback, done: false });\r  };\r\r}\r\r","\r\rexport function render(Store, renderer) {\r\r  return (Comp, props = {}, node = 'root') => {\r\r    // console.log(\"render ------------------------------->\", Comp, props, node);\r\r    if (!Store.objects.defaultComponent) Store.objects.defaultComponent = () => Comp(props);\r    const isString = typeof node === 'string';\r    const parentNode = isString ? document.getElementById(node) : node;\r    const Component = Comp || Store.objects.defaultComponent;\r    renderer(Component(props), parentNode);\r\r  };\r\r}\r\r","\rexport function check(Store, checks) {\r\r  return (name, str) => {\r\r    const { result, message } = checks[name](str);\r    return { result, message };\r\r  };\r\r}\r","\r\rexport function alertOn(Store, alerts) {\r\r  return (obj = {}) => {\r\r    const rand1000 = Math.floor(1000 * Math.random());\r    const timestamp = Date.now();\r    const _id = `${timestamp}--${rand1000}`;\r\r    const message = obj.name ? alerts[obj.name] : obj.name;\r\r    Store.objects.alerts.push({\r      _id,\r      ...obj,\r      message,\r      timestamp,\r      isVisible: true,\r    });\r\r    // Maybe later we are going to notify only the exact component using alerts\r    Store.methods.notify(null);\r\r    if (obj.timeout) {\r      setTimeout(() => {\r        Store.methods.alertOff({ _id });\r      }, obj.timeout);\r    }\r\r  };\r\r}\r","\rexport function alertOff(Store) {\r\r  return ({ _id }) => {\r    const findAlert = Store.objects.alerts.find(item => item._id === _id);\r\r    if (findAlert) {\r      findAlert.isVisible = false;\r      // Maybe later we are going to notify only the exact component using alerts\r      Store.methods.notify(null);\r    }\r\r  };\r\r}\r","\r\rexport function callServerMethod(siteUrl) {\r\r  return (method, args = {}) => {\r\r    // For each query string parameter sent, add it to the path\r    // const requestUrl = Object.keys(queryStringObject).reduce((acum, key, index) => {\r    //   const queryStr = `${key}=${queryStringObject[key]}`;\r    //   if (index === 0) return `${acum}?${queryStr}`;\r    //   return `${acum}&${queryStr}`;\r    // }, `${baseUrl}/${path}`);\r\r    return new Promise((resolve, reject) => {\r\r      // Form the http request as a JSON type\r      const xhr = new window.XMLHttpRequest();\r      xhr.open('POST', `${siteUrl}/api/methods`, true);\r      xhr.setRequestHeader('Content-type', 'application/json');\r\r      // For each header sent, add it to the request\r      // Object.keys(headers).forEach(key => {\r      //   xhr.setRequestHeader(key, headers[key]);\r      // });\r\r      // When the request comes back, handle the response\r      xhr.onreadystatechange = () => {\r        if (xhr.readyState === window.XMLHttpRequest.DONE) {\r\r          const statusCode = xhr.status;\r          if (![ 200, 201 ].includes(statusCode)) reject('XHR request failed');\r\r          const responseReturned = xhr.responseText;\r          resolve(JSON.parse(responseReturned));\r\r        }\r      };\r\r      // Send the payload as JSON\r      const payloadString = JSON.stringify({ method, args });\r      xhr.send(payloadString);\r\r    });\r\r  };\r\r}\r\r","\nexport default {\n\n  SYSTEM_DB_USER_ID: '0000000-system-000000',\n  WINDOW_APP_DATA: '__appData__',\n  GET_MODEL_DATA_METHOD: '@server-model.getData',\n\n};\n\n","import globals from '../../globals';\r\rexport function getDataFromServer(Store) {\r\r  return args => {\r\r    const {\r      instance = null,\r      user_id,\r      lastTimestamp = 0,\r      localEntitiesIds = [],\r    } = args;\r\r    const requestArgs = {\r      user_id,\r      lastTimestamp,\r      localEntitiesIds,\r    };\r\r    return new Promise((resolve, reject) => {\r\r      // Special method available ony for internal libs\r      Store.methods.callServerMethod(globals.GET_MODEL_DATA_METHOD, requestArgs)\r      .then(items => {\r        if (!items) reject('Could not get data from server');\r        const newTimestamp = Date.now();\r        resolve({ instance, items, newTimestamp });\r      })\r      .catch(reject);\r\r    });\r\r  };\r\r}\r","\r\rexport function syncDataToDB({ instance, items, newTimestamp }) {\r\r  let counter = 0;\r  return new Promise(resolve => {\r\r    if (items.length === 0) resolve({ instance, counter, newTimestamp });\r\r    const modelStore = instance.transaction([ 'model' ], 'readwrite').objectStore('model');\r    const requestPrevRecords = modelStore.getAll();\r\r    requestPrevRecords.onsuccess = () => {\r      const previousRecords = requestPrevRecords.result;\r\r      items.forEach(item => {\r\r        if (item.attrs.length > 0) {\r          const findRecord = previousRecords.find(rec => rec._id === item._id);\r          const putRequest = modelStore.put({\r            _id: item._id,\r            domain: item.domain,\r            attrs: findRecord ? [\r              ...findRecord.attrs,\r              ...item.attrs,\r            ] : item.attrs,\r          });\r\r          putRequest.onsuccess = () => {\r            counter++;\r            if (counter === items.length) resolve({ instance, counter, newTimestamp });\r          };\r        }\r\r      });\r    };\r\r  });\r\r\r}\r\r","\rexport function getDBMetadata({ instance, user_id }) {\r\r  return new Promise((resolve, reject) => {\r\r    const controlStore = instance.transaction('control').objectStore('control');\r    const requestControlRecords = controlStore.getAll();\r\r\r    requestControlRecords.onsuccess = () => {\r      const controlRecords = requestControlRecords.result || [];\r      const lastTimestamp = controlRecords.length > 0\r        ? controlRecords[controlRecords.length - 1].lastTimestamp\r        : 0;\r\r      const modelStore = instance.transaction('model').objectStore('model');\r      const requestModelKeys = modelStore.getAllKeys();\r\r      requestModelKeys.onsuccess = () => {\r        const localEntitiesIds = requestModelKeys.result || [];\r        resolve({\r          instance,\r          user_id,\r          lastTimestamp,\r          localEntitiesIds,\r        });\r      };\r\r      requestModelKeys.onerror = () => reject('Error getting Model Keys');\r\r    };\r\r    requestControlRecords.onerror = () => reject('Error getting Control Records');\r\r  });\r\r\r}\r\r","\r\rexport function updateDBControl({ instance, counter, newTimestamp }) {\r\r  return new Promise(resolve => {\r\r    const controlStore = instance.transaction([ 'control' ], 'readwrite').objectStore('control');\r\r    const putRequest = controlStore.put({\r      _id: newTimestamp,\r      lastTimestamp: newTimestamp,\r      counter,\r    });\r\r    putRequest.onsuccess = () => {\r      resolve({ instance });\r    };\r\r\r  });\r\r\r}\r\r","\r\rexport function getModelData({ instance }) {\r\r  return new Promise(resolve => {\r\r    const modelStore = instance.transaction('model').objectStore('model');\r    const requestRecords = modelStore.getAll();\r\r    requestRecords.onsuccess = () => {\r      return resolve(requestRecords.result);\r    };\r\r  });\r\r\r}\r\r","\rimport { getDataFromServer } from './getDataFromServer';\rimport { syncDataToDB } from './syncDataToDB';\rimport { getDBMetadata } from './getDBMetadata';\rimport { updateDBControl } from './updateDBControl';\rimport { getModelData } from './getModelData';\r\rexport function start(Store, { name, version, user_id }) {\r\r  const indexedDB = window.indexedDB ||\r    window.mozIndexedDB ||\r    window.webkitIndexedDB ||\r    window.msIndexedDB;\r\r  // No indexedDB, we just request all data always\r  if (!indexedDB) {\r    return new Promise((resolve, reject) => {\r      getDataFromServer({ user_id })\r      .then(({ items }) => resolve(items))\r      .catch(reject);\r    });\r  }\r\r  return new Promise((resolve, reject) => {\r\r    const request = indexedDB.open(name, version);\r    request.onsuccess = () => resolve({ instance: request.result, user_id });\r    request.onerror = () => reject(request.error);\r\r    request.onupgradeneeded = e => {\r      const instance = e.target.result;\r      instance.model = instance.createObjectStore('model', { keyPath: '_id' });\r      instance.control = instance.createObjectStore('control', { keyPath: '_id' });\r    };\r\r  })\r  .then(getDBMetadata)\r  .then(getDataFromServer(Store))\r  .then(syncDataToDB)\r  .then(updateDBControl)\r  .then(getModelData)\r  .catch(console.log);\r\r}\r\r","\r\rfunction getCurrentAttrs(attrs) {\r  return attrs.reduce((acum, item) => {\r    const { key, value, timestamp } = item;\r    /*\r      value:\r        is always what is displayed at the UI, used in calculations, etc.\r        can be in 2 status\r\r      status:\r        0: value is \"optimistic\" and has not been validated yet by the server\r        1: value coherent with the server initial load,\r        2: optimistic value that was confirmed by the server\r        3: value that came from the server through web-sockets\r\r      dbValue:\r        is the last value that was confirmed by the server\r        if null indicates that the whole record is not confirmed yet\r\r      timestamp:\r        is the timestamp that reflects the last status coming from the server\r\r    */\r    if (!acum[key]) acum[key] = { value, dbValue: value, status: 1, timestamp };\r    return {\r      ...acum,\r      [key]: timestamp > acum[key].timestamp\r        ? { value, dbValue: value, status: 1, timestamp }\r        : acum[key],\r    };\r  }, {});\r}\r\rexport function hydrate(Store) {\r\r  return data => {\r\r    if (data.length > 0) {\r\r      Store.db.data = data.reduce((acum, item) => {\r        const { _id, domain, attrs } = item;\r        if (!acum[domain]) acum[domain] = [];\r\r        return {\r          ...acum,\r          [domain]: [\r            ...acum[domain],\r            {\r              _id,\r              attrs: getCurrentAttrs(attrs),\r            },\r          ],\r        };\r\r      }, {});\r\r      // Renders the defaultComponent (Container)\r      if (Store.flags.IS_MOUNTED) Store.methods.render();\r\r    }\r\r  };\r\r}\r\r\r","\rexport function query(Store) {\r\r  return domain => {\r    if (!Store.db.data) return [];\r    return Store.db.data[domain] || [];\r  };\r\r}\r\r\r","\rexport { start } from './start';\rexport { hydrate } from './hydrate';\rexport { query } from './query';\r","\n\nexport function initSocket({ socketUrl, user_id, onMessage }) {\n\n  if (!socketUrl) {\n    console.log('SocketUrl not defined');\n    return () => undefined;\n  }\n\n  const wsSupport = 'WebSocket' in window;\n  if (!wsSupport) {\n    console.log('WebSocket not supported');\n    return () => undefined;\n  }\n\n  const ws = new window.WebSocket(socketUrl);\n\n  const sendJSON = obj => ws.send(JSON.stringify(obj));\n\n  ws.onopen = () => {\n    console.log('WebSocket opened');\n    // tell the server user_id is connected\n    if (user_id) sendJSON({ user_id, isInitial: true });\n  };\n\n  ws.onclose = x => console.log('WebSocket closed', x);\n  ws.onmessage = obj => {\n    onMessage(JSON.parse(obj.data));\n  };\n\n\n  return sendJSON;\n\n}\n\n","\n\nexport function onMessage(Store) {\n\n  return payload => {\n    const { data, isInitial } = payload;\n    if (isInitial) console.log('Socket first message --> ', payload);\n\n    if (data) {\n      const { _id, domain, attrs } = data;\n      if (!Store.db.data[domain]) Store.db.data[domain] = [];\n      const findEntity = Store.db.data[domain].find(item => item._id === _id);\n\n      if (!findEntity) {\n\n        // Create entity\n        Store.db.data[domain].push({\n          _id,\n          attrs: attrs.reduce((acum, item) => {\n            const { key, value, timestamp } = item;\n            return {\n              ...acum,\n              [key]: {\n                value,\n                dbValue: value,\n                status: 3,\n                timestamp,\n              },\n            };\n          }, {}),\n        });\n\n      } else {\n\n        // Update entity\n        attrs.forEach(item => {\n          const { key, value, timestamp } = item;\n          findEntity.attrs[key] = {\n            value,\n            dbValue: value,\n            status: 3,\n            timestamp,\n          };\n        });\n\n      }\n\n      Store.methods.render();\n\n    }\n  };\n\n}\n\n","\rexport { initSocket } from './initSocket';\rexport { onMessage } from './onMessage';\r","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","\rimport * as db from '../db';\rimport * as sockets from '../sockets';\rimport { callServerMethod } from '../methods';\r\rconst isBrowser = process.browser;\r\rexport function connectStoreToServer(Store, { user_id, siteUrl, socketUrl }) {\r\r  /* ----------------------------------------------------------------------------------------------\r    Initialize db && sockets\r  ---------------------------------------------------------------------------------------------- */\r\r  Store.methods.callServerMethod = callServerMethod(siteUrl);\r\r  if (isBrowser) {\r\r  /* ----------------------------------------------------------------------------------------------\r    Initialize sockets\r  ---------------------------------------------------------------------------------------------- */\r\r    const sendJSON = sockets.initSocket({\r      socketUrl,\r      user_id,\r      onMessage: sockets.onMessage(Store),\r    });\r\r    Store.sockets = {\r      sendJSON,\r    };\r\r  /* ----------------------------------------------------------------------------------------------\r    Initialize db\r  ---------------------------------------------------------------------------------------------- */\r\r    Store.db = {\r      data: null, // already transformed and living free after initialization\r      query: db.query(Store),\r    };\r\r    return db.start(Store, { name: 'asyncDB', version: 1, user_id })\r    .then(db.hydrate(Store))\r    .catch(console.log);\r\r  }\r\r}\r\r","\rimport { connectStoreToServer } from '../lifecycle/connectStoreToServer';\r\rexport function startApp(Store) {\r\r  return ({ appData, rootComponent }) => {\r\r    const {\r      currentPage,\r      query,\r      baseUrl,\r      baseFolder,\r      httpPort,\r      socketPort,\r      isProduction,\r      useServiceWorker,\r    } = appData;\r\r    const siteUrl = isProduction\r      ? `https://${baseUrl}/${baseFolder}`\r      : `http://${baseUrl}:${httpPort}`;\r\r    const socketUrl = !socketPort ? null : isProduction\r      ? `wss://${baseUrl}/${baseFolder}`\r      : `ws://${baseUrl}:${socketPort}`;\r\r/* ------------------------------------------------------------------------------------------------\r  Register Service Worker\r------------------------------------------------------------------------------------------------ */\r\r    if (useServiceWorker && 'serviceWorker' in window.navigator) {\r\r      window.navigator.serviceWorker\r      .register('../sw.js', { scope: '/' })\r      // .register(`./${baseFolder}/sw.js`, { scope: '/' })\r      .then(registration => {\r        console.log('Service Worker registration OK', registration);\r      })\r      .catch(error => {\r        console.log('Service Worker registration FAILED', error);\r      });\r\r\r    }\r\r\r/* ------------------------------------------------------------------------------------------------\r  First Render && Connect to Server data\r------------------------------------------------------------------------------------------------ */\r\r    if (currentPage) Store.methods.set({ currentPage });\r    if (query.user) Store.methods.set({ user_id: query.user });\r\r\r    connectStoreToServer(Store, { user_id: query.user, siteUrl, socketUrl })\r    .then(() => {\r      Store.methods.render(rootComponent, { currentPage }, 'root');\r      Store.methods.emit('MOUNTED');\r    });\r\r\r  };\r\r}\r","\rexport { get } from './get';\rexport { subscribe } from './subscribe';\rexport { set } from './set';\rexport { setItem } from './setItem';\rexport { toggle } from './toggle';\rexport { notify } from './notify';\rexport { compute } from './compute';\rexport { computeAll } from './computeAll';\rexport { emit } from './emit';\rexport { registerComponent } from './registerComponent';\rexport { on } from './on';\rexport { once } from './once';\rexport { render } from './render';\rexport { check } from './check';\rexport { alertOn } from './alertOn';\rexport { alertOff } from './alertOff';\rexport { callServerMethod } from './callServerMethod';\rexport { startApp } from './startApp';\r\r","\r\rexport function addToQueue(Store) {\r\r  return ({ name, steps, onError }) => {\r    const _id = Date.now();\r    const objToQueue = {\r      _id,\r      name,\r      steps,\r      done: false,\r    };\r\r    if (onError) objToQueue.onError = onError;\r    Store.process.queue.splice(0, 0, objToQueue); // ads into the first element\r    Store.process.runTask({ _id });\r\r  };\r\r}\r\r","\r\r\rexport function createProcesses(Store, actions) {\r\r  if (!actions) return () => undefined;\r\r  const processes = Object.keys(actions).reduce((acum, key) => {\r    const singleAction = actions[key];\r    /*\r      We dont want to pass the whole Store to the action, just observables\r      So, the actions consumes the Store like:\r      const { language } = Store.observables;\r    */\r    const { observables } = Store.objects;\r    return {\r      ...acum,\r      [key]: args => {\r        Store.process.addToQueue({\r          name: key,\r          ...singleAction({ observables })(args),\r        });\r      },\r    };\r  }, {});\r\r  return (name, args) => processes[name](args);\r\r\r}\r\r\r","\n\nexport function processOptimistic(Store, args) {\n\n  const { _id, domain, attrs } = args;\n\n  if (!Store.db.data[domain]) Store.db.data[domain] = [];\n  const findEntity = Store.db.data[domain].find(item => item._id === _id);\n\n  /*\n    Case 1: New Entity\n  */\n\n  if (!findEntity) {\n\n    // Create entity\n    Store.db.data[domain].push({\n      _id,\n      attrs: Object.keys(attrs).reduce((acum, key) => {\n        return {\n          ...acum,\n          [key]: {\n            value: attrs[key],\n            dbValue: null,\n            status: 0,\n            timestamp: Date.now(),\n          },\n        };\n      }, {}),\n    });\n\n  } else {\n\n  /*\n    Case 2: Existing entity, new attrs\n  */\n\n    // Update entity\n    Object.keys(attrs).forEach(key => {\n      const dbValue = attrs[key].value;\n      findEntity.attrs[key] = {\n        value: attrs[key],\n        dbValue,\n        status: 0,\n        timestamp: Date.now(),\n      };\n    });\n\n  }\n\n\n  Store.methods.render();\n\n  return isOK => {\n\n    if (!findEntity && !isOK) {\n      // New Entity + error => Remove the entity\n      Store.db.data[domain] = Store.db.data[domain].filter(item => item._id !== _id);\n\n    } else {\n      // New Entity + ok || Existing entity => Update fields\n\n      const entity = Store.db.data[domain].find(item => item._id === _id);\n\n      Object.keys(entity.attrs).forEach(key => {\n        const field = entity.attrs[key];\n        if (field.status === 0) {\n          field.status = isOK ? 2 : 1;\n          if (!isOK) field.value = field.dbValue;\n          if (isOK) field.dbValue = field.value;\n          field.timestamp = Date.now();\n        }\n      });\n\n    }\n\n    if (!isOK) Store.methods.render();\n\n  };\n\n}\n\n","\nimport { processOptimistic } from './processOptimistic';\n\nexport function processStep(Store, step, previousArgs = {}) {\n\n  const {\n    method,\n    domain,\n    args,\n    sideEffect,\n    optimistic = true,\n  } = step(previousArgs);\n\n  // Backend may return something valuable for the next step\n  if (domain === '_Backend_') {\n\n    const resolveOptimistic = optimistic\n      ? processOptimistic(Store, args)\n      : () => undefined;\n\n    return new Promise((resolve, reject) => {\n      return Store.methods.callServerMethod(method, args)\n        .then(response => {\n          const error = response.error;\n          const data = response.data;\n          resolveOptimistic(!error);\n          resolve({\n            error,\n            data: {\n              ...previousArgs.data,\n              ...data,\n            },\n          });\n        })\n        .catch(err => {\n          resolveOptimistic(false);\n          reject(err);\n        });\n    });\n  }\n\n  // Store works like simple local State\n  if (domain === '_Store_') {\n    Store.methods[method](args);\n    if (sideEffect) sideEffect();\n    return Promise.resolve(previousArgs);\n  }\n\n}\n\n","\n// import { resolveArgs } from './resolveArgs';\nimport { processStep } from './processStep';\n\nexport function processor(Store) {\n\n  return steps => {\n\n    // Promise build\n    const promises = steps.map(step => {\n\n      return previousArgs => {\n        // const args = resolveArgs(step.args, prevArgs);\n        // processStep(Store, step, args);\n        return processStep(Store, step, previousArgs);\n      };\n\n    });\n\n    // Promise execution\n    let proceed = true;\n\n    promises.reduce((p, fn) => {\n      return p\n        .then(res => {\n          if (proceed) return fn(res);\n        })\n        .catch(e => {\n          console.log('Error in Promise chain execution', e);\n          proceed = false;\n        });\n    }, Promise.resolve({}));\n\n  };\n\n}\n","\rexport function runTask(Store) {\r\r  return ({ _id }) => {\r    const task = Store.process.queue.find(item => item._id === _id);\r    Store.process.processor(task.steps);\r    task.done = true;\r\r  };\r\r}\r\r","\rexport { addToQueue } from './addToQueue';\rexport { createProcesses } from './createProcesses';\rexport { processor } from './processor';\rexport { runTask } from './runTask';\r\r","\rimport * as methods from '../methods';\rimport * as queue from '../queue';\r\rexport function createStore(definition, renderer) {\r\r  const Store = {};\r\r  const {\r    observables = {},\r    computed = {},\r    actions = {},\r    alerts = {},\r    checks = {},\r  } = definition;\r\r  /* ----------------------------------------------------------------------------------------------\r    Initialize flags\r  ---------------------------------------------------------------------------------------------- */\r  Store.flags = {\r    IS_MOUNTED: false,\r  };\r\r  /* ----------------------------------------------------------------------------------------------\r    Initialize utils to the store for convenience.\r  ---------------------------------------------------------------------------------------------- */\r  Store.utils = {\r    hoc: null, // will be attached after ui initialization\r  };\r\r  /* ----------------------------------------------------------------------------------------------\r    Initialize observables\r  ---------------------------------------------------------------------------------------------- */\r  Store.objects = {\r    defaultComponent: null,\r    observables,\r    computed,\r    listeners: [],\r    reactions: [],\r    components: {},\r    alerts: [],\r  };\r\r  /* ----------------------------------------------------------------------------------------------\r    Initialize methods\r  ---------------------------------------------------------------------------------------------- */\r  Store.methods = {\r    check: methods.check(Store, checks),\r    get: methods.get(Store),\r    subscribe: methods.subscribe(Store),\r    set: methods.set(Store),\r    setItem: methods.setItem(Store),\r    toggle: methods.toggle(Store),\r    notify: methods.notify(Store),\r    emit: methods.emit(Store),\r    on: methods.on(Store),\r    once: methods.once(Store),\r    render: methods.render(Store, renderer),\r    compute: methods.compute(Store),\r    computeAll: methods.computeAll(Store),\r    registerComponent: methods.registerComponent(Store),\r    alertOn: methods.alertOn(Store, alerts),\r    alertOff: methods.alertOff(Store),\r    callServerMethod: () => undefined, // will be initialized on 'connectStoreToServer'\r    startApp: methods.startApp(Store),\r  };\r\r  /* ----------------------------------------------------------------------------------------------\r    Initialize queued processes\r  ---------------------------------------------------------------------------------------------- */\r  Store.process = {\r    queue: [],\r    addToQueue: queue.addToQueue(Store),\r    processor: queue.processor(Store),\r    runTask: queue.runTask(Store),\r    call: queue.createProcesses(Store, actions), // client side method call\r  };\r\r  /* ----------------------------------------------------------------------------------------------\r    Initialize listeners\r  ---------------------------------------------------------------------------------------------- */\r  Object.keys(Store.objects.observables).forEach(observable => {\r    Store.objects.listeners.push({ observable, components: [] });\r  });\r\r  /* ----------------------------------------------------------------------------------------------\r    Start with computed values up to date\r  ---------------------------------------------------------------------------------------------- */\r  Store.methods.computeAll();\r\r\r  return Store;\r\r}\r\r","\rimport { createStore } from './lifecycle/createStore';\r\rexport default createStore;\r","\r\r\rexport function registerStyles(registerNumber, styledRules) {\r\r  if (!styledRules) return;\r\r  const node = document.getElementById('component-styles');\r  const alreadyRegistered = node.innerHTML.indexOf(`--${registerNumber}`) > -1;\r  if (!alreadyRegistered) node.innerHTML += styledRules;\r\r}\r\r\r","/*\n *          __        ___\n *    _____/ /___  __/ (_)____\n *   / ___/ __/ / / / / / ___/\n *  (__  ) /_/ /_/ / / (__  )\n * /____/\\__/\\__, /_/_/____/\n *          /____/\n *\n * light - weight css preprocessor @licence MIT\n */\n(function (factory) {/* eslint-disable */\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? (module['exports'] = factory(null)) :\n\t\ttypeof define === 'function' && define['amd'] ? define(factory(null)) :\n\t\t\t(window['stylis'] = factory(null))\n}(/** @param {*=} options */function factory (options) {/* eslint-disable */\n\n\t'use strict'\n\n\t/**\n\t * Notes\n\t *\n\t * The ['<method name>'] pattern is used to support closure compiler\n\t * the jsdoc signatures are also used to the same effect\n\t *\n\t * ----\n\t *\n\t * int + int + int === n4 [faster]\n\t *\n\t * vs\n\t *\n\t * int === n1 && int === n2 && int === n3\n\t *\n\t * ----\n\t *\n\t * switch (int) { case ints...} [faster]\n\t *\n\t * vs\n\t *\n\t * if (int == 1 && int === 2 ...)\n\t *\n\t * ----\n\t *\n\t * The (first*n1 + second*n2 + third*n3) format used in the property parser\n\t * is a simple way to hash the sequence of characters\n\t * taking into account the index they occur in\n\t * since any number of 3 character sequences could produce duplicates.\n\t *\n\t * On the other hand sequences that are directly tied to the index of the character\n\t * resolve a far more accurate measure, it's also faster\n\t * to evaluate one condition in a switch statement\n\t * than three in an if statement regardless of the added math.\n\t *\n\t * This allows the vendor prefixer to be both small and fast.\n\t */\n\n\tvar nullptn = /^\\0+/g /* matches leading null characters */\n\tvar formatptn = /[\\0\\r\\f]/g /* matches new line, null and formfeed characters */\n\tvar colonptn = /: */g /* splits animation rules */\n\tvar cursorptn = /zoo|gra/ /* assert cursor varient */\n\tvar transformptn = /([,: ])(transform)/g /* vendor prefix transform, older webkit */\n\tvar animationptn = /,+\\s*(?![^(]*[)])/g /* splits multiple shorthand notation animations */\n\tvar propertiesptn = / +\\s*(?![^(]*[)])/g /* animation properties */\n\tvar elementptn = / *[\\0] */g /* selector elements */\n\tvar selectorptn = /,\\r+?/g /* splits selectors */\n\tvar andptn = /([\\t\\r\\n ])*\\f?&/g /* match & */\n\tvar escapeptn = /:global\\(((?:[^\\(\\)\\[\\]]*|\\[.*\\]|\\([^\\(\\)]*\\))*)\\)/g /* matches :global(.*) */\n\tvar invalidptn = /\\W+/g /* removes invalid characters from keyframes */\n\tvar keyframeptn = /@(k\\w+)\\s*(\\S*)\\s*/ /* matches @keyframes $1 */\n\tvar plcholdrptn = /::(place)/g /* match ::placeholder varient */\n\tvar readonlyptn = /:(read-only)/g /* match :read-only varient */\n\tvar beforeptn = /\\s+(?=[{\\];=:>])/g /* matches \\s before ] ; = : */\n\tvar afterptn = /([[}=:>])\\s+/g /* matches \\s after characters [ } = : */\n\tvar tailptn = /(\\{[^{]+?);(?=\\})/g /* matches tail semi-colons ;} */\n\tvar whiteptn = /\\s{2,}/g /* matches repeating whitespace */\n\tvar pseudoptn = /([^\\(])(:+) */g /* pseudo element */\n\tvar writingptn = /[svh]\\w+-[tblr]{2}/ /* match writing mode property values */\n\tvar gradientptn = /([\\w-]+t\\()/g /* match *gradient property */\n\tvar supportsptn = /\\(\\s*(.*)\\s*\\)/g /* match supports (groups) */\n\tvar propertyptn = /([\\s\\S]*?);/g /* match properties leading semicolon */\n\tvar selfptn = /-self|flex-/g /* match flex- and -self in align-self: flex-*; */\n\tvar pseudofmt = /[^]*?(:[rp][el]a[\\w-]+)[^]*/ /* extrats :readonly or :placholder from selector */\n\tvar trimptn = /[ \\t]+$/ /* match tail whitspace */\n\tvar dimensionptn = /stretch|:\\s*\\w+\\-(?:conte|avail)/ /* match max/min/fit-content, fill-available */\n\tvar imgsrcptn = /([^-])(image-set\\()/\n\n\t/* vendors */\n\tvar webkit = '-webkit-'\n\tvar moz = '-moz-'\n\tvar ms = '-ms-'\n\n\t/* character codes */\n\tvar SEMICOLON = 59 /* ; */\n\tvar CLOSEBRACES = 125 /* } */\n\tvar OPENBRACES = 123 /* { */\n\tvar OPENPARENTHESES = 40 /* ( */\n\tvar CLOSEPARENTHESES = 41 /* ) */\n\tvar OPENBRACKET = 91 /* [ */\n\tvar CLOSEBRACKET = 93 /* ] */\n\tvar NEWLINE = 10 /* \\n */\n\tvar CARRIAGE = 13 /* \\r */\n\tvar TAB = 9 /* \\t */\n\tvar AT = 64 /* @ */\n\tvar SPACE = 32 /*   */\n\tvar AND = 38 /* & */\n\tvar DASH = 45 /* - */\n\tvar UNDERSCORE = 95 /* _ */\n\tvar STAR = 42 /* * */\n\tvar COMMA = 44 /* , */\n\tvar COLON = 58 /* : */\n\tvar SINGLEQUOTE = 39 /* ' */\n\tvar DOUBLEQUOTE = 34 /* \" */\n\tvar FOWARDSLASH = 47 /* / */\n\tvar GREATERTHAN = 62 /* > */\n\tvar PLUS = 43 /* + */\n\tvar TILDE = 126 /* ~ */\n\tvar NULL = 0 /* \\0 */\n\tvar FORMFEED = 12 /* \\f */\n\tvar VERTICALTAB = 11 /* \\v */\n\n\t/* special identifiers */\n\tvar KEYFRAME = 107 /* k */\n\tvar MEDIA = 109 /* m */\n\tvar SUPPORTS = 115 /* s */\n\tvar PLACEHOLDER = 112 /* p */\n\tvar READONLY = 111 /* o */\n\tvar IMPORT = 105 /* <at>i */\n\tvar CHARSET = 99 /* <at>c */\n\tvar DOCUMENT = 100 /* <at>d */\n\tvar PAGE = 112 /* <at>p */\n\n\tvar column = 1 /* current column */\n\tvar line = 1 /* current line numebr */\n\tvar pattern = 0 /* :pattern */\n\n\tvar cascade = 1 /* #id h1 h2 vs h1#id h2#id  */\n\tvar prefix = 1 /* vendor prefix */\n\tvar escape = 1 /* escape :global() pattern */\n\tvar compress = 0 /* compress output */\n\tvar semicolon = 0 /* no/semicolon option */\n\tvar preserve = 0 /* preserve empty selectors */\n\n\t/* empty reference */\n\tvar array = []\n\n\t/* plugins */\n\tvar plugins = []\n\tvar plugged = 0\n\tvar should = null\n\n\t/* plugin context */\n\tvar POSTS = -2\n\tvar PREPS = -1\n\tvar UNKWN = 0\n\tvar PROPS = 1\n\tvar BLCKS = 2\n\tvar ATRUL = 3\n\n\t/* plugin newline context */\n\tvar unkwn = 0\n\n\t/* keyframe animation */\n\tvar keyed = 1\n\tvar key = ''\n\n\t/* selector namespace */\n\tvar nscopealt = ''\n\tvar nscope = ''\n\n\t/**\n\t * Compile\n\t *\n\t * @param {Array<string>} parent\n\t * @param {Array<string>} current\n\t * @param {string} body\n\t * @param {number} id\n\t * @param {number} depth\n\t * @return {string}\n\t */\n\tfunction compile (parent, current, body, id, depth) {\n\t\tvar bracket = 0 /* brackets [] */\n\t\tvar comment = 0 /* comments /* // or /* */\n\t\tvar parentheses = 0 /* functions () */\n\t\tvar quote = 0 /* quotes '', \"\" */\n\n\t\tvar first = 0 /* first character code */\n\t\tvar second = 0 /* second character code */\n\t\tvar code = 0 /* current character code */\n\t\tvar tail = 0 /* previous character code */\n\t\tvar trail = 0 /* character before previous code */\n\t\tvar peak = 0 /* previous non-whitespace code */\n\n\t\tvar counter = 0 /* count sequence termination */\n\t\tvar context = 0 /* track current context */\n\t\tvar atrule = 0 /* track @at-rule context */\n\t\tvar pseudo = 0 /* track pseudo token index */\n\t\tvar caret = 0 /* current character index */\n\t\tvar format = 0 /* control character formating context */\n\t\tvar insert = 0 /* auto semicolon insertion */\n\t\tvar invert = 0 /* inverted selector pattern */\n\t\tvar length = 0 /* generic length address */\n\t\tvar eof = body.length /* end of file(length) */\n\t\tvar eol = eof - 1 /* end of file(characters) */\n\n\t\tvar char = '' /* current character */\n\t\tvar chars = '' /* current buffer of characters */\n\t\tvar child = '' /* next buffer of characters */\n\t\tvar out = '' /* compiled body */\n\t\tvar children = '' /* compiled children */\n\t\tvar flat = '' /* compiled leafs */\n\t\tvar selector /* generic selector address */\n\t\tvar result /* generic address */\n\n\t\t// ...build body\n\t\twhile (caret < eof) {\n\t\t\tcode = body.charCodeAt(caret)\n\n\t\t\t// eof varient\n\t\t\tif (caret === eol) {\n\t\t\t\t// last character + noop context, add synthetic padding for noop context to terminate\n\t\t\t\tif (comment + quote + parentheses + bracket !== 0) {\n\t\t\t\t\tif (comment !== 0) {\n\t\t\t\t\t\tcode = comment === FOWARDSLASH ? NEWLINE : FOWARDSLASH\n\t\t\t\t\t}\n\n\t\t\t\t\tquote = parentheses = bracket = 0\n\t\t\t\t\teof++\n\t\t\t\t\teol++\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (comment + quote + parentheses + bracket === 0) {\n\t\t\t\t// eof varient\n\t\t\t\tif (caret === eol) {\n\t\t\t\t\tif (format > 0) {\n\t\t\t\t\t\tchars = chars.replace(formatptn, '')\n\t\t\t\t\t}\n\n\t\t\t\t\tif (chars.trim().length > 0) {\n\t\t\t\t\t\tswitch (code) {\n\t\t\t\t\t\t\tcase SPACE:\n\t\t\t\t\t\t\tcase TAB:\n\t\t\t\t\t\t\tcase SEMICOLON:\n\t\t\t\t\t\t\tcase CARRIAGE:\n\t\t\t\t\t\t\tcase NEWLINE: {\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\tchars += body.charAt(caret)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcode = SEMICOLON\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// auto semicolon insertion\n\t\t\t\tif (insert === 1) {\n\t\t\t\t\tswitch (code) {\n\t\t\t\t\t\t// false flags\n\t\t\t\t\t\tcase OPENBRACES:\n\t\t\t\t\t\tcase CLOSEBRACES:\n\t\t\t\t\t\tcase SEMICOLON:\n\t\t\t\t\t\tcase DOUBLEQUOTE:\n\t\t\t\t\t\tcase SINGLEQUOTE:\n\t\t\t\t\t\tcase OPENPARENTHESES:\n\t\t\t\t\t\tcase CLOSEPARENTHESES:\n\t\t\t\t\t\tcase COMMA: {\n\t\t\t\t\t\t\tinsert = 0\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// ignore\n\t\t\t\t\t\tcase TAB:\n\t\t\t\t\t\tcase CARRIAGE:\n\t\t\t\t\t\tcase NEWLINE:\n\t\t\t\t\t\tcase SPACE: {\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// valid\n\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\tinsert = 0\n\t\t\t\t\t\t\tlength = caret\n\t\t\t\t\t\t\tfirst = code\n\t\t\t\t\t\t\tcaret--\n\t\t\t\t\t\t\tcode = SEMICOLON\n\n\t\t\t\t\t\t\twhile (length < eof) {\n\t\t\t\t\t\t\t\tswitch (body.charCodeAt(length++)) {\n\t\t\t\t\t\t\t\t\tcase NEWLINE:\n\t\t\t\t\t\t\t\t\tcase CARRIAGE:\n\t\t\t\t\t\t\t\t\tcase SEMICOLON: {\n\t\t\t\t\t\t\t\t\t\t++caret\n\t\t\t\t\t\t\t\t\t\tcode = first\n\t\t\t\t\t\t\t\t\t\tlength = eof\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcase COLON: {\n\t\t\t\t\t\t\t\t\t\tif (format > 0) {\n\t\t\t\t\t\t\t\t\t\t\t++caret\n\t\t\t\t\t\t\t\t\t\t\tcode = first\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcase OPENBRACES: {\n\t\t\t\t\t\t\t\t\t\tlength = eof\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// token varient\n\t\t\t\tswitch (code) {\n\t\t\t\t\tcase OPENBRACES: {\n\t\t\t\t\t\tchars = chars.trim()\n\t\t\t\t\t\tfirst = chars.charCodeAt(0)\n\t\t\t\t\t\tcounter = 1\n\t\t\t\t\t\tlength = ++caret\n\n\t\t\t\t\t\twhile (caret < eof) {\n\t\t\t\t\t\t\tswitch (code = body.charCodeAt(caret)) {\n\t\t\t\t\t\t\t\tcase OPENBRACES: {\n\t\t\t\t\t\t\t\t\tcounter++\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase CLOSEBRACES: {\n\t\t\t\t\t\t\t\t\tcounter--\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase FOWARDSLASH: {\n\t\t\t\t\t\t\t\t\tswitch (second = body.charCodeAt(caret + 1)) {\n\t\t\t\t\t\t\t\t\t\t// /*, //\n\t\t\t\t\t\t\t\t\t\tcase STAR:\n\t\t\t\t\t\t\t\t\t\tcase FOWARDSLASH: {\n\t\t\t\t\t\t\t\t\t\t\tcaret = delimited(second, caret, eol, body)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// given \"[\" === 91 & \"]\" === 93 hence forth 91 + 1 + 1 === 93\n\t\t\t\t\t\t\t\tcase OPENBRACKET: {\n\t\t\t\t\t\t\t\t\tcode++\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// given \"(\" === 40 & \")\" === 41 hence forth 40 + 1 === 41\n\t\t\t\t\t\t\t\tcase OPENPARENTHESES: {\n\t\t\t\t\t\t\t\t\tcode++\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// quote tail delimiter is identical to the head delimiter hence noop,\n\t\t\t\t\t\t\t\t// fallthrough clauses have been shifted to the correct tail delimiter\n\t\t\t\t\t\t\t\tcase DOUBLEQUOTE:\n\t\t\t\t\t\t\t\tcase SINGLEQUOTE: {\n\t\t\t\t\t\t\t\t\twhile (caret++ < eol) {\n\t\t\t\t\t\t\t\t\t\tif (body.charCodeAt(caret) === code) {\n\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (counter === 0) {\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcaret++\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tchild = body.substring(length, caret)\n\n\t\t\t\t\t\tif (first === NULL) {\n\t\t\t\t\t\t\tfirst = (chars = chars.replace(nullptn, '').trim()).charCodeAt(0)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tswitch (first) {\n\t\t\t\t\t\t\t// @at-rule\n\t\t\t\t\t\t\tcase AT: {\n\t\t\t\t\t\t\t\tif (format > 0) {\n\t\t\t\t\t\t\t\t\tchars = chars.replace(formatptn, '')\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tsecond = chars.charCodeAt(1)\n\n\t\t\t\t\t\t\t\tswitch (second) {\n\t\t\t\t\t\t\t\t\tcase DOCUMENT:\n\t\t\t\t\t\t\t\t\tcase MEDIA:\n\t\t\t\t\t\t\t\t\tcase SUPPORTS:\n\t\t\t\t\t\t\t\t\tcase DASH: {\n\t\t\t\t\t\t\t\t\t\tselector = current\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\t\t\tselector = array\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tchild = compile(current, selector, child, second, depth+1)\n\t\t\t\t\t\t\t\tlength = child.length\n\n\t\t\t\t\t\t\t\t// preserve empty @at-rule\n\t\t\t\t\t\t\t\tif (preserve > 0 && length === 0) {\n\t\t\t\t\t\t\t\t\tlength = chars.length\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// execute plugins, @at-rule context\n\t\t\t\t\t\t\t\tif (plugged > 0) {\n\t\t\t\t\t\t\t\t\tselector = select(array, chars, invert)\n\t\t\t\t\t\t\t\t\tresult = proxy(ATRUL, child, selector, current, line, column, length, second, depth, id)\n\t\t\t\t\t\t\t\t\tchars = selector.join('')\n\n\t\t\t\t\t\t\t\t\tif (result !== void 0) {\n\t\t\t\t\t\t\t\t\t\tif ((length = (child = result.trim()).length) === 0) {\n\t\t\t\t\t\t\t\t\t\t\tsecond = 0\n\t\t\t\t\t\t\t\t\t\t\tchild = ''\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (length > 0) {\n\t\t\t\t\t\t\t\t\tswitch (second) {\n\t\t\t\t\t\t\t\t\t\tcase SUPPORTS: {\n\t\t\t\t\t\t\t\t\t\t\tchars = chars.replace(supportsptn, supports)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tcase DOCUMENT:\n\t\t\t\t\t\t\t\t\t\tcase MEDIA:\n\t\t\t\t\t\t\t\t\t\tcase DASH: {\n\t\t\t\t\t\t\t\t\t\t\tchild = chars + '{' + child + '}'\n\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tcase KEYFRAME: {\n\t\t\t\t\t\t\t\t\t\t\tchars = chars.replace(keyframeptn, '$1 $2' + (keyed > 0 ? key : ''))\n\t\t\t\t\t\t\t\t\t\t\tchild = chars + '{' + child + '}'\n\n\t\t\t\t\t\t\t\t\t\t\tif (prefix === 1 || (prefix === 2 && vendor('@'+child, 3))) {\n\t\t\t\t\t\t\t\t\t\t\t\tchild = '@' + webkit + child + '@' + child\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tchild = '@' + child\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\t\t\t\tchild = chars + child\n\n\t\t\t\t\t\t\t\t\t\t\tif (id === PAGE) {\n\t\t\t\t\t\t\t\t\t\t\t\tchild = (out += child, '')\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tchild = ''\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// selector\n\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\tchild = compile(current, select(current, chars, invert), child, id, depth+1)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tchildren += child\n\n\t\t\t\t\t\t// reset\n\t\t\t\t\t\tcontext = 0\n\t\t\t\t\t\tinsert = 0\n\t\t\t\t\t\tpseudo = 0\n\t\t\t\t\t\tformat = 0\n\t\t\t\t\t\tinvert = 0\n\t\t\t\t\t\tatrule = 0\n\t\t\t\t\t\tchars = ''\n\t\t\t\t\t\tchild = ''\n\t\t\t\t\t\tcode = body.charCodeAt(++caret)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tcase CLOSEBRACES:\n\t\t\t\t\tcase SEMICOLON: {\n\t\t\t\t\t\tchars = (format > 0 ? chars.replace(formatptn, '') : chars).trim()\n\n\t\t\t\t\t\tif ((length = chars.length) > 1) {\n\t\t\t\t\t\t\t// monkey-patch missing colon\n\t\t\t\t\t\t\tif (pseudo === 0) {\n\t\t\t\t\t\t\t\tfirst = chars.charCodeAt(0)\n\n\t\t\t\t\t\t\t\t// first character is a letter or dash, buffer has a space character\n\t\t\t\t\t\t\t\tif ((first === DASH || first > 96 && first < 123)) {\n\t\t\t\t\t\t\t\t\tlength = (chars = chars.replace(' ', ':')).length\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// execute plugins, property context\n\t\t\t\t\t\t\tif (plugged > 0) {\n\t\t\t\t\t\t\t\tif ((result = proxy(PROPS, chars, current, parent, line, column, out.length, id, depth, id)) !== void 0) {\n\t\t\t\t\t\t\t\t\tif ((length = (chars = result.trim()).length) === 0) {\n\t\t\t\t\t\t\t\t\t\tchars = '\\0\\0'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tfirst = chars.charCodeAt(0)\n\t\t\t\t\t\t\tsecond = chars.charCodeAt(1)\n\n\t\t\t\t\t\t\tswitch (first) {\n\t\t\t\t\t\t\t\tcase NULL: {\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase AT: {\n\t\t\t\t\t\t\t\t\tif (second === IMPORT || second === CHARSET) {\n\t\t\t\t\t\t\t\t\t\tflat += chars + body.charAt(caret)\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\t\tif (chars.charCodeAt(length-1) === COLON) {\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tout += property(chars, first, second, chars.charCodeAt(2))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// reset\n\t\t\t\t\t\tcontext = 0\n\t\t\t\t\t\tinsert = 0\n\t\t\t\t\t\tpseudo = 0\n\t\t\t\t\t\tformat = 0\n\t\t\t\t\t\tinvert = 0\n\t\t\t\t\t\tchars = ''\n\t\t\t\t\t\tcode = body.charCodeAt(++caret)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// parse characters\n\t\t\tswitch (code) {\n\t\t\t\tcase CARRIAGE:\n\t\t\t\tcase NEWLINE: {\n\t\t\t\t\t// auto insert semicolon\n\t\t\t\t\tif (comment + quote + parentheses + bracket + semicolon === 0) {\n\t\t\t\t\t\t// valid non-whitespace characters that\n\t\t\t\t\t\t// may precede a newline\n\t\t\t\t\t\tswitch (peak) {\n\t\t\t\t\t\t\tcase CLOSEPARENTHESES:\n\t\t\t\t\t\t\tcase SINGLEQUOTE:\n\t\t\t\t\t\t\tcase DOUBLEQUOTE:\n\t\t\t\t\t\t\tcase AT:\n\t\t\t\t\t\t\tcase TILDE:\n\t\t\t\t\t\t\tcase GREATERTHAN:\n\t\t\t\t\t\t\tcase STAR:\n\t\t\t\t\t\t\tcase PLUS:\n\t\t\t\t\t\t\tcase FOWARDSLASH:\n\t\t\t\t\t\t\tcase DASH:\n\t\t\t\t\t\t\tcase COLON:\n\t\t\t\t\t\t\tcase COMMA:\n\t\t\t\t\t\t\tcase SEMICOLON:\n\t\t\t\t\t\t\tcase OPENBRACES:\n\t\t\t\t\t\t\tcase CLOSEBRACES: {\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\t// current buffer has a colon\n\t\t\t\t\t\t\t\tif (pseudo > 0) {\n\t\t\t\t\t\t\t\t\tinsert = 1\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// terminate line comment\n\t\t\t\t\tif (comment === FOWARDSLASH) {\n\t\t\t\t\t\tcomment = 0\n\t\t\t\t\t} else if (cascade + context === 0 && id !== KEYFRAME && chars.length > 0) {\n\t\t\t\t\t\tformat = 1\n\t\t\t\t\t\tchars += '\\0'\n\t\t\t\t\t}\n\n\t\t\t\t\t// execute plugins, newline context\n\t\t\t\t\tif (plugged * unkwn > 0) {\n\t\t\t\t\t\tproxy(UNKWN, chars, current, parent, line, column, out.length, id, depth, id)\n\t\t\t\t\t}\n\n\t\t\t\t\t// next line, reset column position\n\t\t\t\t\tcolumn = 1\n\t\t\t\t\tline++\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\tcase SEMICOLON:\n\t\t\t\tcase CLOSEBRACES: {\n\t\t\t\t\tif (comment + quote + parentheses + bracket === 0) {\n\t\t\t\t\t\tcolumn++\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdefault: {\n\t\t\t\t\t// increment column position\n\t\t\t\t\tcolumn++\n\n\t\t\t\t\t// current character\n\t\t\t\t\tchar = body.charAt(caret)\n\n\t\t\t\t\t// remove comments, escape functions, strings, attributes and prepare selectors\n\t\t\t\t\tswitch (code) {\n\t\t\t\t\t\tcase TAB:\n\t\t\t\t\t\tcase SPACE: {\n\t\t\t\t\t\t\tif (quote + bracket + comment === 0) {\n\t\t\t\t\t\t\t\tswitch (tail) {\n\t\t\t\t\t\t\t\t\tcase COMMA:\n\t\t\t\t\t\t\t\t\tcase COLON:\n\t\t\t\t\t\t\t\t\tcase TAB:\n\t\t\t\t\t\t\t\t\tcase SPACE: {\n\t\t\t\t\t\t\t\t\t\tchar = ''\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\t\t\tif (code !== SPACE) {\n\t\t\t\t\t\t\t\t\t\t\tchar = ' '\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// escape breaking control characters\n\t\t\t\t\t\tcase NULL: {\n\t\t\t\t\t\t\tchar = '\\\\0'\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase FORMFEED: {\n\t\t\t\t\t\t\tchar = '\\\\f'\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase VERTICALTAB: {\n\t\t\t\t\t\t\tchar = '\\\\v'\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// &\n\t\t\t\t\t\tcase AND: {\n\t\t\t\t\t\t\t// inverted selector pattern i.e html &\n\t\t\t\t\t\t\tif (quote + comment + bracket === 0 && cascade > 0) {\n\t\t\t\t\t\t\t\tinvert = 1\n\t\t\t\t\t\t\t\tformat = 1\n\t\t\t\t\t\t\t\tchar = '\\f' + char\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// ::p<l>aceholder, l\n\t\t\t\t\t\t// :read-on<l>y, l\n\t\t\t\t\t\tcase 108: {\n\t\t\t\t\t\t\tif (quote + comment + bracket + pattern === 0 && pseudo > 0) {\n\t\t\t\t\t\t\t\tswitch (caret - pseudo) {\n\t\t\t\t\t\t\t\t\t// ::placeholder\n\t\t\t\t\t\t\t\t\tcase 2: {\n\t\t\t\t\t\t\t\t\t\tif (tail === PLACEHOLDER && body.charCodeAt(caret-3) === COLON) {\n\t\t\t\t\t\t\t\t\t\t\tpattern = tail\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// :read-only\n\t\t\t\t\t\t\t\t\tcase 8: {\n\t\t\t\t\t\t\t\t\t\tif (trail === READONLY) {\n\t\t\t\t\t\t\t\t\t\t\tpattern = trail\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// :<pattern>\n\t\t\t\t\t\tcase COLON: {\n\t\t\t\t\t\t\tif (quote + comment + bracket === 0) {\n\t\t\t\t\t\t\t\tpseudo = caret\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// selectors\n\t\t\t\t\t\tcase COMMA: {\n\t\t\t\t\t\t\tif (comment + parentheses + quote + bracket === 0) {\n\t\t\t\t\t\t\t\tformat = 1\n\t\t\t\t\t\t\t\tchar += '\\r'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// quotes\n\t\t\t\t\t\tcase DOUBLEQUOTE:\n\t\t\t\t\t\tcase SINGLEQUOTE: {\n\t\t\t\t\t\t\tif (comment === 0) {\n\t\t\t\t\t\t\t\tquote = quote === code ? 0 : (quote === 0 ? code : quote)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// attributes\n\t\t\t\t\t\tcase OPENBRACKET: {\n\t\t\t\t\t\t\tif (quote + comment + parentheses === 0) {\n\t\t\t\t\t\t\t\tbracket++\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase CLOSEBRACKET: {\n\t\t\t\t\t\t\tif (quote + comment + parentheses === 0) {\n\t\t\t\t\t\t\t\tbracket--\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// functions\n\t\t\t\t\t\tcase CLOSEPARENTHESES: {\n\t\t\t\t\t\t\tif (quote + comment + bracket === 0) {\n\t\t\t\t\t\t\t\tparentheses--\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase OPENPARENTHESES: {\n\t\t\t\t\t\t\tif (quote + comment + bracket === 0) {\n\t\t\t\t\t\t\t\tif (context === 0) {\n\t\t\t\t\t\t\t\t\tswitch (tail*2 + trail*3) {\n\t\t\t\t\t\t\t\t\t\t// :matches\n\t\t\t\t\t\t\t\t\t\tcase 533: {\n\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t// :global, :not, :nth-child etc...\n\t\t\t\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\t\t\t\tcounter = 0\n\t\t\t\t\t\t\t\t\t\t\tcontext = 1\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tparentheses++\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase AT: {\n\t\t\t\t\t\t\tif (comment + parentheses + quote + bracket + pseudo + atrule === 0) {\n\t\t\t\t\t\t\t\tatrule = 1\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// block/line comments\n\t\t\t\t\t\tcase STAR:\n\t\t\t\t\t\tcase FOWARDSLASH: {\n\t\t\t\t\t\t\tif (quote + bracket + parentheses > 0) {\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tswitch (comment) {\n\t\t\t\t\t\t\t\t// initialize line/block comment context\n\t\t\t\t\t\t\t\tcase 0: {\n\t\t\t\t\t\t\t\t\tswitch (code*2 + body.charCodeAt(caret+1)*3) {\n\t\t\t\t\t\t\t\t\t\t// //\n\t\t\t\t\t\t\t\t\t\tcase 235: {\n\t\t\t\t\t\t\t\t\t\t\tcomment = FOWARDSLASH\n\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t// /*\n\t\t\t\t\t\t\t\t\t\tcase 220: {\n\t\t\t\t\t\t\t\t\t\t\tlength = caret\n\t\t\t\t\t\t\t\t\t\t\tcomment = STAR\n\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// end block comment context\n\t\t\t\t\t\t\t\tcase STAR: {\n\t\t\t\t\t\t\t\t\tif (code === FOWARDSLASH && tail === STAR && length + 2 !== caret) {\n\t\t\t\t\t\t\t\t\t\t// /*<!> ... */, !\n\t\t\t\t\t\t\t\t\t\tif (body.charCodeAt(length+2) === 33) {\n\t\t\t\t\t\t\t\t\t\t\tout += body.substring(length, caret+1)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tchar = ''\n\t\t\t\t\t\t\t\t\t\tcomment = 0\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// ignore comment blocks\n\t\t\t\t\tif (comment === 0) {\n\t\t\t\t\t\t// aggressive isolation mode, divide each individual selector\n\t\t\t\t\t\t// including selectors in :not function but excluding selectors in :global function\n\t\t\t\t\t\tif (cascade + quote + bracket + atrule === 0 && id !== KEYFRAME && code !== SEMICOLON) {\n\t\t\t\t\t\t\tswitch (code) {\n\t\t\t\t\t\t\t\tcase COMMA:\n\t\t\t\t\t\t\t\tcase TILDE:\n\t\t\t\t\t\t\t\tcase GREATERTHAN:\n\t\t\t\t\t\t\t\tcase PLUS:\n\t\t\t\t\t\t\t\tcase CLOSEPARENTHESES:\n\t\t\t\t\t\t\t\tcase OPENPARENTHESES: {\n\t\t\t\t\t\t\t\t\tif (context === 0) {\n\t\t\t\t\t\t\t\t\t\t// outside of an isolated context i.e nth-child(<...>)\n\t\t\t\t\t\t\t\t\t\tswitch (tail) {\n\t\t\t\t\t\t\t\t\t\t\tcase TAB:\n\t\t\t\t\t\t\t\t\t\t\tcase SPACE:\n\t\t\t\t\t\t\t\t\t\t\tcase NEWLINE:\n\t\t\t\t\t\t\t\t\t\t\tcase CARRIAGE: {\n\t\t\t\t\t\t\t\t\t\t\t\tchar = char + '\\0'\n\t\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\t\t\t\t\tchar = '\\0' + char + (code === COMMA ? '' : '\\0')\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tformat = 1\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t// within an isolated context, sleep untill it's terminated\n\t\t\t\t\t\t\t\t\t\tswitch (code) {\n\t\t\t\t\t\t\t\t\t\t\tcase OPENPARENTHESES: {\n\t\t\t\t\t\t\t\t\t\t\t\t// :globa<l>(\n\t\t\t\t\t\t\t\t\t\t\t\tif (pseudo + 7 === caret && tail === 108) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tpseudo = 0\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tcontext = ++counter\n\t\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tcase CLOSEPARENTHESES: {\n\t\t\t\t\t\t\t\t\t\t\t\tif ((context = --counter) === 0) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tformat = 1\n\t\t\t\t\t\t\t\t\t\t\t\t\tchar += '\\0'\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase TAB:\n\t\t\t\t\t\t\t\tcase SPACE: {\n\t\t\t\t\t\t\t\t\tswitch (tail) {\n\t\t\t\t\t\t\t\t\t\tcase NULL:\n\t\t\t\t\t\t\t\t\t\tcase OPENBRACES:\n\t\t\t\t\t\t\t\t\t\tcase CLOSEBRACES:\n\t\t\t\t\t\t\t\t\t\tcase SEMICOLON:\n\t\t\t\t\t\t\t\t\t\tcase COMMA:\n\t\t\t\t\t\t\t\t\t\tcase FORMFEED:\n\t\t\t\t\t\t\t\t\t\tcase TAB:\n\t\t\t\t\t\t\t\t\t\tcase SPACE:\n\t\t\t\t\t\t\t\t\t\tcase NEWLINE:\n\t\t\t\t\t\t\t\t\t\tcase CARRIAGE: {\n\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\t\t\t\t// ignore in isolated contexts\n\t\t\t\t\t\t\t\t\t\t\tif (context === 0) {\n\t\t\t\t\t\t\t\t\t\t\t\tformat = 1\n\t\t\t\t\t\t\t\t\t\t\t\tchar += '\\0'\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// concat buffer of characters\n\t\t\t\t\t\tchars += char\n\n\t\t\t\t\t\t// previous non-whitespace character code\n\t\t\t\t\t\tif (code !== SPACE && code !== TAB) {\n\t\t\t\t\t\t\tpeak = code\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// tail character codes\n\t\t\ttrail = tail\n\t\t\ttail = code\n\n\t\t\t// visit every character\n\t\t\tcaret++\n\t\t}\n\n\t\tlength = out.length\n\n\t\t// preserve empty selector\n \t\tif (preserve > 0) {\n \t\t\tif (length === 0 && children.length === 0 && (current[0].length === 0) === false) {\n \t\t\t\tif (id !== MEDIA || (current.length === 1 && (cascade > 0 ? nscopealt : nscope) === current[0])) {\n\t\t\t\t\tlength = current.join(',').length + 2\n \t\t\t\t}\n \t\t\t}\n\t\t}\n\n\t\tif (length > 0) {\n\t\t\t// cascade isolation mode?\n\t\t\tselector = cascade === 0 && id !== KEYFRAME ? isolate(current) : current\n\n\t\t\t// execute plugins, block context\n\t\t\tif (plugged > 0) {\n\t\t\t\tresult = proxy(BLCKS, out, selector, parent, line, column, length, id, depth, id)\n\n\t\t\t\tif (result !== void 0 && (out = result).length === 0) {\n\t\t\t\t\treturn flat + out + children\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tout = selector.join(',') + '{' + out + '}'\n\n\t\t\tif (prefix*pattern !== 0) {\n\t\t\t\tif (prefix === 2 && !vendor(out, 2))\n\t\t\t\t\tpattern = 0\n\n\t\t\t\tswitch (pattern) {\n\t\t\t\t\t// ::read-only\n\t\t\t\t\tcase READONLY: {\n\t\t\t\t\t\tout = out.replace(readonlyptn, ':'+moz+'$1')+out\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\t// ::placeholder\n\t\t\t\t\tcase PLACEHOLDER: {\n\t\t\t\t\t\tout = (\n\t\t\t\t\t\t\tout.replace(plcholdrptn, '::' + webkit + 'input-$1') +\n\t\t\t\t\t\t\tout.replace(plcholdrptn, '::' + moz + '$1') +\n\t\t\t\t\t\t\tout.replace(plcholdrptn, ':' + ms + 'input-$1') + out\n\t\t\t\t\t\t)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tpattern = 0\n\t\t\t}\n\t\t}\n\n\t\treturn flat + out + children\n\t}\n\n\t/**\n\t * Select\n\t *\n\t * @param {Array<string>} parent\n\t * @param {string} current\n\t * @param {number} invert\n\t * @return {Array<string>}\n\t */\n\tfunction select (parent, current, invert) {\n\t\tvar selectors = current.trim().split(selectorptn)\n\t\tvar out = selectors\n\n\t\tvar length = selectors.length\n\t\tvar l = parent.length\n\n\t\tswitch (l) {\n\t\t\t// 0-1 parent selectors\n\t\t\tcase 0:\n\t\t\tcase 1: {\n\t\t\t\tfor (var i = 0, selector = l === 0 ? '' : parent[0] + ' '; i < length; ++i) {\n\t\t\t\t\tout[i] = scope(selector, out[i], invert, l).trim()\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t\t// >2 parent selectors, nested\n\t\t\tdefault: {\n\t\t\t\tfor (var i = 0, j = 0, out = []; i < length; ++i) {\n\t\t\t\t\tfor (var k = 0; k < l; ++k) {\n\t\t\t\t\t\tout[j++] = scope(parent[k] + ' ', selectors[i], invert, l).trim()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn out\n\t}\n\n\t/**\n\t * Scope\n\t *\n\t * @param {string} parent\n\t * @param {string} current\n\t * @param {number} invert\n\t * @param {number} level\n\t * @return {string}\n\t */\n\tfunction scope (parent, current, invert, level) {\n\t\tvar selector = current\n\t\tvar code = selector.charCodeAt(0)\n\n\t\t// trim leading whitespace\n\t\tif (code < 33) {\n\t\t\tcode = (selector = selector.trim()).charCodeAt(0)\n\t\t}\n\n\t\tswitch (code) {\n\t\t\t// &\n\t\t\tcase AND: {\n\t\t\t\tswitch (cascade + level) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\tcase 1: {\n\t\t\t\t\t\tif (parent.trim().length === 0) {\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\treturn selector.replace(andptn, '$1'+parent.trim())\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t\t// :\n\t\t\tcase COLON: {\n\t\t\t\tswitch (selector.charCodeAt(1)) {\n\t\t\t\t\t// g in :global\n\t\t\t\t\tcase 103: {\n\t\t\t\t\t\tif (escape > 0 && cascade > 0) {\n\t\t\t\t\t\t\treturn selector.replace(escapeptn, '$1').replace(andptn, '$1'+nscope)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\t// :hover\n\t\t\t\t\t\treturn parent.trim() + selector.replace(andptn, '$1'+parent.trim())\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\t// html &\n\t\t\t\tif (invert*cascade > 0 && selector.indexOf('\\f') > 0) {\n\t\t\t\t\treturn selector.replace(andptn, (parent.charCodeAt(0) === COLON ? '' : '$1')+parent.trim())\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn parent + selector\n\t}\n\n\t/**\n\t * Property\n\t *\n\t * @param {string} input\n\t * @param {number} first\n\t * @param {number} second\n\t * @param {number} third\n\t * @return {string}\n\t */\n\tfunction property (input, first, second, third) {\n\t\tvar index = 0\n\t\tvar out = input + ';'\n\t\tvar hash = (first*2) + (second*3) + (third*4)\n\t\tvar cache\n\n\t\t// animation: a, n, i characters\n\t\tif (hash === 944) {\n\t\t\treturn animation(out)\n\t\t} else if (prefix === 0 || (prefix === 2 && !vendor(out, 1))) {\n\t\t\treturn out\n\t\t}\n\n\t\t// vendor prefix\n\t\tswitch (hash) {\n\t\t\t// text-decoration/text-size-adjust/text-shadow/text-align/text-transform: t, e, x\n\t\t\tcase 1015: {\n\t\t\t\t// text-shadow/text-align/text-transform, a\n\t\t\t\treturn out.charCodeAt(10) === 97 ? webkit + out + out : out\n\t\t\t}\n\t\t\t// filter/fill f, i, l\n\t\t\tcase 951: {\n\t\t\t\t// filter, t\n\t\t\t\treturn out.charCodeAt(3) === 116 ? webkit + out + out : out\n\t\t\t}\n\t\t\t// color/column, c, o, l\n\t\t\tcase 963: {\n\t\t\t\t// column, n\n\t\t\t\treturn out.charCodeAt(5) === 110 ? webkit + out + out : out\n\t\t\t}\n\t\t\t// box-decoration-break, b, o, x\n\t\t\tcase 1009: {\n\t\t\t\tif (out.charCodeAt(4) !== 100) {\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\t// mask, m, a, s\n\t\t\t// clip-path, c, l, i\n\t\t\tcase 969:\n\t\t\tcase 942: {\n\t\t\t\treturn webkit + out + out\n\t\t\t}\n\t\t\t// appearance: a, p, p\n\t\t\tcase 978: {\n\t\t\t\treturn webkit + out + moz + out + out\n\t\t\t}\n\t\t\t// hyphens: h, y, p\n\t\t\t// user-select: u, s, e\n\t\t\tcase 1019:\n\t\t\tcase 983: {\n\t\t\t\treturn webkit + out + moz + out + ms + out + out\n\t\t\t}\n\t\t\t// background/backface-visibility, b, a, c\n\t\t\tcase 883: {\n\t\t\t\t// backface-visibility, -\n\t\t\t\tif (out.charCodeAt(8) === DASH) {\n\t\t\t\t\treturn webkit + out + out\n\t\t\t\t}\n\n\t\t\t\t// image-set(...)\n\t\t\t\tif (out.indexOf('image-set(', 11) > 0) {\n\t\t\t\t\treturn out.replace(imgsrcptn, '$1'+webkit+'$2') + out\n\t\t\t\t}\n\n\t\t\t\treturn out\n\t\t\t}\n\t\t\t// flex: f, l, e\n\t\t\tcase 932: {\n\t\t\t\tif (out.charCodeAt(4) === DASH) {\n\t\t\t\t\tswitch (out.charCodeAt(5)) {\n\t\t\t\t\t\t// flex-grow, g\n\t\t\t\t\t\tcase 103: {\n\t\t\t\t\t\t\treturn webkit + 'box-' + out.replace('-grow', '') + webkit + out + ms + out.replace('grow', 'positive') + out\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// flex-shrink, s\n\t\t\t\t\t\tcase 115: {\n\t\t\t\t\t\t\treturn webkit + out + ms + out.replace('shrink', 'negative') + out\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// flex-basis, b\n\t\t\t\t\t\tcase 98: {\n\t\t\t\t\t\t\treturn webkit + out + ms + out.replace('basis', 'preferred-size') + out\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn webkit + out + ms + out + out\n\t\t\t}\n\t\t\t// order: o, r, d\n\t\t\tcase 964: {\n\t\t\t\treturn webkit + out + ms + 'flex' + '-' + out + out\n\t\t\t}\n\t\t\t// justify-items/justify-content, j, u, s\n\t\t\tcase 1023: {\n\t\t\t\t// justify-content, c\n\t\t\t\tif (out.charCodeAt(8) !== 99) {\n\t\t\t\t\tbreak\n\t\t\t\t}\n\n\t\t\t\tcache = out.substring(out.indexOf(':', 15)).replace('flex-', '').replace('space-between', 'justify')\n\t\t\t\treturn webkit + 'box-pack' + cache + webkit + out + ms + 'flex-pack' + cache + out\n\t\t\t}\n\t\t\t// cursor, c, u, r\n\t\t\tcase 1005: {\n\t\t\t\treturn cursorptn.test(out) ? out.replace(colonptn, ':' + webkit) + out.replace(colonptn, ':' + moz) + out : out\n\t\t\t}\n\t\t\t// writing-mode, w, r, i\n\t\t\tcase 1000: {\n\t\t\t\tcache = out.substring(13).trim()\n\t\t\t\tindex = cache.indexOf('-') + 1\n\n\t\t\t\tswitch (cache.charCodeAt(0)+cache.charCodeAt(index)) {\n\t\t\t\t\t// vertical-lr\n\t\t\t\t\tcase 226: {\n\t\t\t\t\t\tcache = out.replace(writingptn, 'tb')\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\t// vertical-rl\n\t\t\t\t\tcase 232: {\n\t\t\t\t\t\tcache = out.replace(writingptn, 'tb-rl')\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\t// horizontal-tb\n\t\t\t\t\tcase 220: {\n\t\t\t\t\t\tcache = out.replace(writingptn, 'lr')\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\treturn out\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn webkit + out + ms + cache + out\n\t\t\t}\n\t\t\t// position: sticky\n\t\t\tcase 1017: {\n\t\t\t\tif (out.indexOf('sticky', 9) === -1) {\n\t\t\t\t\treturn out\n\t\t\t\t}\n\t\t\t}\n\t\t\t// display(flex/inline-flex/inline-box): d, i, s\n\t\t\tcase 975: {\n\t\t\t\tindex = (out = input).length - 10\n\t\t\t\tcache = (out.charCodeAt(index) === 33 ? out.substring(0, index) : out).substring(input.indexOf(':', 7) + 1).trim()\n\n\t\t\t\tswitch (hash = cache.charCodeAt(0) + (cache.charCodeAt(7)|0)) {\n\t\t\t\t\t// inline-\n\t\t\t\t\tcase 203: {\n\t\t\t\t\t\t// inline-box\n\t\t\t\t\t\tif (cache.charCodeAt(8) < 111) {\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// inline-box/sticky\n\t\t\t\t\tcase 115: {\n\t\t\t\t\t\tout = out.replace(cache, webkit+cache)+';'+out\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\t// inline-flex\n\t\t\t\t\t// flex\n\t\t\t\t\tcase 207:\n\t\t\t\t\tcase 102: {\n\t\t\t\t\t\tout = (\n\t\t\t\t\t\t\tout.replace(cache, webkit+(hash > 102 ? 'inline-' : '')+'box')+';'+\n\t\t\t\t\t\t\tout.replace(cache, webkit+cache)+';'+\n\t\t\t\t\t\t\tout.replace(cache, ms+cache+'box')+';'+\n\t\t\t\t\t\t\tout\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn out + ';'\n\t\t\t}\n\t\t\t// align-items, align-center, align-self: a, l, i, -\n\t\t\tcase 938: {\n\t\t\t\tif (out.charCodeAt(5) === DASH) {\n\t\t\t\t\tswitch (out.charCodeAt(6)) {\n\t\t\t\t\t\t// align-items, i\n\t\t\t\t\t\tcase 105: {\n\t\t\t\t\t\t\tcache = out.replace('-items', '')\n\t\t\t\t\t\t\treturn webkit + out + webkit + 'box-' + cache + ms + 'flex-' + cache + out\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// align-self, s\n\t\t\t\t\t\tcase 115: {\n\t\t\t\t\t\t\treturn webkit + out + ms + 'flex-item-' + out.replace(selfptn, '') + out\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// align-content\n\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\treturn webkit + out + ms + 'flex-line-pack' + out.replace('align-content', '').replace(selfptn, '') + out\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t\t// min/max\n\t\t\tcase 973:\n\t\t\tcase 989: {\n\t\t\t\t// min-/max- height/width/block-size/inline-size\n\t\t\t\tif (out.charCodeAt(3) !== DASH || out.charCodeAt(4) === 122) {\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\t// height/width: min-content / width: max-content\n\t\t\tcase 931:\n\t\t\tcase 953: {\n\t\t\t\tif (dimensionptn.test(input) === true) {\n\t\t\t\t\t// stretch\n\t\t\t\t\tif ((cache = input.substring(input.indexOf(':') + 1)).charCodeAt(0) === 115)\n\t\t\t\t\t\treturn property(input.replace('stretch', 'fill-available'), first, second, third).replace(':fill-available', ':stretch')\n\t\t\t\t\telse\n\t\t\t\t\t\treturn out.replace(cache, webkit + cache) + out.replace(cache, moz + cache.replace('fill-', '')) + out\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t\t// transform, transition: t, r, a\n\t\t\tcase 962: {\n\t\t\t\tout = webkit + out + (out.charCodeAt(5) === 102 ? ms + out : '') + out\n\n\t\t\t\t// transitions\n\t\t\t\tif (second + third === 211 && out.charCodeAt(13) === 105 && out.indexOf('transform', 10) > 0) {\n\t\t\t\t\treturn out.substring(0, out.indexOf(';', 27) + 1).replace(transformptn, '$1' + webkit + '$2') + out\n\t\t\t\t}\n\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\treturn out\n\t}\n\n\t/**\n\t * Vendor\n\t *\n\t * @param {string} content\n\t * @param {number} context\n\t * @return {boolean}\n\t */\n\tfunction vendor (content, context) {\n\t\tvar index = content.indexOf(context === 1 ? ':' : '{')\n\t\tvar key = content.substring(0, context !== 3 ? index : 10)\n\t\tvar value = content.substring(index + 1, content.length - 1)\n\n\t\treturn should(context !== 2 ? key : key.replace(pseudofmt, '$1'), value, context)\n\t}\n\n\t/**\n\t * Supports\n\t *\n\t * @param {string} match\n\t * @param {string} group\n\t * @return {string}\n\t */\n\tfunction supports (match, group) {\n\t\tvar out = property(group, group.charCodeAt(0), group.charCodeAt(1), group.charCodeAt(2))\n\n\t\treturn out !== group+';' ? out.replace(propertyptn, ' or ($1)').substring(4) : '('+group+')'\n\t}\n\n\t/**\n\t * Animation\n\t *\n\t * @param {string} input\n\t * @return {string}\n\t */\n\tfunction animation (input) {\n\t\tvar length = input.length\n\t\tvar index = input.indexOf(':', 9) + 1\n\t\tvar declare = input.substring(0, index).trim()\n\t\tvar out = input.substring(index, length-1).trim()\n\n\t\tswitch (input.charCodeAt(9)*keyed) {\n\t\t\tcase 0: {\n\t\t\t\tbreak\n\t\t\t}\n\t\t\t// animation-*, -\n\t\t\tcase DASH: {\n\t\t\t\t// animation-name, n\n\t\t\t\tif (input.charCodeAt(10) !== 110) {\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\t// animation/animation-name\n\t\t\tdefault: {\n\t\t\t\t// split in case of multiple animations\n\t\t\t\tvar list = out.split((out = '', animationptn))\n\n\t\t\t\tfor (var i = 0, index = 0, length = list.length; i < length; index = 0, ++i) {\n\t\t\t\t\tvar value = list[i]\n\t\t\t\t\tvar items = value.split(propertiesptn)\n\n\t\t\t\t\twhile (value = items[index]) {\n\t\t\t\t\t\tvar peak = value.charCodeAt(0)\n\n\t\t\t\t\t\tif (keyed === 1 && (\n\t\t\t\t\t\t\t// letters\n\t\t\t\t\t\t\t(peak > AT && peak < 90) || (peak > 96 && peak < 123) || peak === UNDERSCORE ||\n\t\t\t\t\t\t\t// dash but not in sequence i.e --\n\t\t\t\t\t\t\t(peak === DASH && value.charCodeAt(1) !== DASH)\n\t\t\t\t\t\t)) {\n\t\t\t\t\t\t\t// not a number/function\n\t\t\t\t\t\t\tswitch (isNaN(parseFloat(value)) + (value.indexOf('(') !== -1)) {\n\t\t\t\t\t\t\t\tcase 1: {\n\t\t\t\t\t\t\t\t\tswitch (value) {\n\t\t\t\t\t\t\t\t\t\t// not a valid reserved keyword\n\t\t\t\t\t\t\t\t\t\tcase 'infinite': case 'alternate': case 'backwards': case 'running':\n\t\t\t\t\t\t\t\t\t\tcase 'normal': case 'forwards': case 'both': case 'none': case 'linear':\n\t\t\t\t\t\t\t\t\t\tcase 'ease': case 'ease-in': case 'ease-out': case 'ease-in-out':\n\t\t\t\t\t\t\t\t\t\tcase 'paused': case 'reverse': case 'alternate-reverse': case 'inherit':\n\t\t\t\t\t\t\t\t\t\tcase 'initial': case 'unset': case 'step-start': case 'step-end': {\n\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\t\t\t\tvalue += key\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\titems[index++] = value\n\t\t\t\t\t}\n\n\t\t\t\t\tout += (i === 0 ? '' : ',') + items.join(' ')\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tout = declare + out + ';'\n\n\t\tif (prefix === 1 || (prefix === 2 && vendor(out, 1)))\n\t\t\treturn webkit + out + out\n\n\t\treturn out\n\t}\n\n\t/**\n\t * Isolate\n\t *\n\t * @param {Array<string>} current\n\t */\n\tfunction isolate (current) {\n\t\tfor (var i = 0, length = current.length, selector = Array(length), padding, element; i < length; ++i) {\n\t\t\t// split individual elements in a selector i.e h1 h2 === [h1, h2]\n\t\t\tvar elements = current[i].split(elementptn)\n\t\t\tvar out = ''\n\n\t\t\tfor (var j = 0, size = 0, tail = 0, code = 0, l = elements.length; j < l; ++j) {\n\t\t\t\t// empty element\n\t\t\t\tif ((size = (element = elements[j]).length) === 0 && l > 1) {\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\n\t\t\t\ttail = out.charCodeAt(out.length-1)\n\t\t\t\tcode = element.charCodeAt(0)\n\t\t\t\tpadding = ''\n\n\t\t\t\tif (j !== 0) {\n\t\t\t\t\t// determine if we need padding\n\t\t\t\t\tswitch (tail) {\n\t\t\t\t\t\tcase STAR:\n\t\t\t\t\t\tcase TILDE:\n\t\t\t\t\t\tcase GREATERTHAN:\n\t\t\t\t\t\tcase PLUS:\n\t\t\t\t\t\tcase SPACE:\n\t\t\t\t\t\tcase OPENPARENTHESES:  {\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\tpadding = ' '\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tswitch (code) {\n\t\t\t\t\tcase AND: {\n\t\t\t\t\t\telement = padding + nscopealt\n\t\t\t\t\t}\n\t\t\t\t\tcase TILDE:\n\t\t\t\t\tcase GREATERTHAN:\n\t\t\t\t\tcase PLUS:\n\t\t\t\t\tcase SPACE:\n\t\t\t\t\tcase CLOSEPARENTHESES:\n\t\t\t\t\tcase OPENPARENTHESES: {\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tcase OPENBRACKET: {\n\t\t\t\t\t\telement = padding + element + nscopealt\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tcase COLON: {\n\t\t\t\t\t\tswitch (element.charCodeAt(1)*2 + element.charCodeAt(2)*3) {\n\t\t\t\t\t\t\t// :global\n\t\t\t\t\t\t\tcase 530: {\n\t\t\t\t\t\t\t\tif (escape > 0) {\n\t\t\t\t\t\t\t\t\telement = padding + element.substring(8, size - 1)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// :hover, :nth-child(), ...\n\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\tif (j < 1 || elements[j-1].length < 1) {\n\t\t\t\t\t\t\t\t\telement = padding + nscopealt + element\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tcase COMMA: {\n\t\t\t\t\t\tpadding = ''\n\t\t\t\t\t}\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\tif (size > 1 && element.indexOf(':') > 0) {\n\t\t\t\t\t\t\telement = padding + element.replace(pseudoptn, '$1' + nscopealt + '$2')\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\telement = padding + element + nscopealt\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tout += element\n\t\t\t}\n\n\t\t\tselector[i] = out.replace(formatptn, '').trim()\n\t\t}\n\n\t\treturn selector\n\t}\n\n\t/**\n\t * Proxy\n\t *\n\t * @param {number} context\n\t * @param {string} content\n\t * @param {Array<string>} selectors\n\t * @param {Array<string>} parents\n\t * @param {number} line\n\t * @param {number} column\n\t * @param {number} length\n\t * @param {number} id\n\t * @param {number} depth\n\t * @param {number} at\n\t * @return {(string|void|*)}\n\t */\n\tfunction proxy (context, content, selectors, parents, line, column, length, id, depth, at) {\n\t\tfor (var i = 0, out = content, next; i < plugged; ++i) {\n\t\t\tswitch (next = plugins[i].call(stylis, context, out, selectors, parents, line, column, length, id, depth, at)) {\n\t\t\t\tcase void 0:\n\t\t\t\tcase false:\n\t\t\t\tcase true:\n\t\t\t\tcase null: {\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\tdefault: {\n\t\t\t\t\tout = next\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (out !== content) {\n\t\t  return out\n\t\t}\n\t}\n\n\t/**\n\t * @param {number} code\n\t * @param {number} index\n\t * @param {number} length\n\t * @param {string} body\n\t * @return {number}\n\t */\n\tfunction delimited (code, index, length, body) {\n\t\tfor (var i = index + 1; i < length; ++i) {\n\t\t\tswitch (body.charCodeAt(i)) {\n\t\t\t\t// /*\n\t\t\t\tcase FOWARDSLASH: {\n\t\t\t\t\tif (code === STAR) {\n\t\t\t\t\t\tif (body.charCodeAt(i - 1) === STAR &&  index + 2 !== i) {\n\t\t\t\t\t\t\treturn i + 1\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\t// //\n\t\t\t\tcase NEWLINE: {\n\t\t\t\t\tif (code === FOWARDSLASH) {\n\t\t\t\t\t\treturn i + 1\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn i\n\t}\n\n\t/**\n\t * @param {number} type\n\t * @param {number} index\n\t * @param {number} length\n\t * @param {number} find\n\t * @param {string} body\n\t * @return {number}\n\t */\n\tfunction match (type, index, length, body) {\n\t\tfor (var i = index + 1; i < length; ++i) {\n\t\t\tswitch (body.charCodeAt(i)) {\n\t\t\t\tcase type: {\n\t\t\t\t\treturn i\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn i\n\t}\n\n\t/**\n\t * Minify\n\t *\n\t * @param {(string|*)} output\n\t * @return {string}\n\t */\n\tfunction minify (output) {\n\t\treturn output\n\t\t\t.replace(formatptn, '')\n\t\t\t.replace(beforeptn, '')\n\t\t\t.replace(afterptn, '$1')\n\t\t\t.replace(tailptn, '$1')\n\t\t\t.replace(whiteptn, ' ')\n\t}\n\n\t/**\n\t * Use\n\t *\n\t * @param {(Array<function(...?)>|function(...?)|number|void)?} plugin\n\t */\n\tfunction use (plugin) {\n\t\tswitch (plugin) {\n\t\t\tcase void 0:\n\t\t\tcase null: {\n\t\t\t\tplugged = plugins.length = 0\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tif (typeof plugin === 'function') {\n\t\t\t\t\tplugins[plugged++] = plugin\n\t\t\t\t}\telse if (typeof plugin === 'object') {\n\t\t\t\t\tfor (var i = 0, length = plugin.length; i < length; ++i) {\n\t\t\t\t\t\tuse(plugin[i])\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tunkwn = !!plugin|0\n\t\t\t\t}\n\t\t\t}\n \t\t}\n\n \t\treturn use\n\t}\n\n\t/**\n\t * Set\n\t *\n\t * @param {*} options\n\t */\n\tfunction set (options) {\n\t\tfor (var name in options) {\n\t\t\tvar value = options[name]\n\t\t\tswitch (name) {\n\t\t\t\tcase 'keyframe': keyed = value|0; break\n\t\t\t\tcase 'global': escape = value|0; break\n\t\t\t\tcase 'cascade': cascade = value|0; break\n\t\t\t\tcase 'compress': compress = value|0; break\n\t\t\t\tcase 'semicolon': semicolon = value|0; break\n\t\t\t\tcase 'preserve': preserve = value|0; break\n\t\t\t\tcase 'prefix':\n\t\t\t\t\tshould = null\n\n\t\t\t\t\tif (!value) {\n\t\t\t\t\t\tprefix = 0\n\t\t\t\t\t} else if (typeof value !== 'function') {\n\t\t\t\t\t\tprefix = 1\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprefix = 2\n\t\t\t\t\t\tshould = value\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn set\n\t}\n\n\t/**\n\t * Stylis\n\t *\n\t * @param {string} selector\n\t * @param {string} input\n\t * @return {*}\n\t */\n\tfunction stylis (selector, input) {\n\t\tif (this !== void 0 && this.constructor === stylis) {\n\t\t\treturn factory(selector)\n\t\t}\n\n\t\t// setup\n\t\tvar ns = selector\n\t\tvar code = ns.charCodeAt(0)\n\n\t\t// trim leading whitespace\n\t\tif (code < 33) {\n\t\t\tcode = (ns = ns.trim()).charCodeAt(0)\n\t\t}\n\n\t\t// keyframe/animation namespace\n\t\tif (keyed > 0) {\n\t\t\tkey = ns.replace(invalidptn, code === OPENBRACKET ? '' : '-')\n\t\t}\n\n\t\t// reset, used to assert if a plugin is moneky-patching the return value\n\t\tcode = 1\n\n\t\t// cascade/isolate\n\t\tif (cascade === 1) {\n\t\t\tnscope = ns\n\t\t} else {\n\t\t\tnscopealt = ns\n\t\t}\n\n\t\tvar selectors = [nscope]\n\t\tvar result\n\n\t\t// execute plugins, pre-process context\n\t\tif (plugged > 0) {\n\t\t\tresult = proxy(PREPS, input, selectors, selectors, line, column, 0, 0, 0, 0)\n\n\t\t\tif (result !== void 0 && typeof result === 'string') {\n\t\t\t\tinput = result\n\t\t\t}\n\t\t}\n\n\t\t// build\n\t\tvar output = compile(array, selectors, input, 0, 0)\n\n\t\t// execute plugins, post-process context\n\t\tif (plugged > 0) {\n\t\t\tresult = proxy(POSTS, output, selectors, selectors, line, column, output.length, 0, 0, 0)\n\n\t\t\t// bypass minification\n\t\t\tif (result !== void 0 && typeof(output = result) !== 'string') {\n\t\t\t\tcode = 0\n\t\t\t}\n\t\t}\n\n\t\t// reset\n\t\tkey = ''\n\t\tnscope = ''\n\t\tnscopealt = ''\n\t\tpattern = 0\n\t\tline = 1\n\t\tcolumn = 1\n\n\t\treturn compress*code === 0 ? output : minify(output)\n\t}\n\n\tstylis['use'] = use\n\tstylis['set'] = set\n\n\tif (options !== void 0) {\n\t\tset(options)\n\t}\n\n\treturn stylis\n}));\n","\r\rimport stylis from 'stylis';\r// stylis minify CSS and add vendor prefixes\r\rexport function processStyle(key, rules) {\r\r  if (key) return stylis(`.${key}`, rules);\r\r  // Inline styles does not need the class selector\r  const out = stylis('', rules);\r  return out.substr(1, out.length - 2);\r\r\r}\r","\rimport { processStyle } from './processStyle';\r\rexport function getClasses(registerNumber, componentDefClasses = {}) {\r\r  const classKeys = Object.keys(componentDefClasses);\r  const mapping = {};\r\r  const rules = classKeys.reduce((acum, key) => {\r    const newClassName = `${key}--${registerNumber}`;\r    mapping[key] = newClassName;\r    return `${acum}${processStyle(newClassName, componentDefClasses[key])}`;\r  }, '');\r\r\r  return {\r    rules,\r    mapping,\r  };\r\r}\r\r","\rimport { processStyle } from './processStyle';\r\rexport function getStyles(componentStyles = {}) {\r\r  const styleKeys = Object.keys(componentStyles);\r\r  // Return only inlineStyles to be attached to the component\r  return styleKeys.reduce((acum, key) => {\r    const isFunction = typeof componentStyles[key] === 'function';\r    return {\r      ...acum,\r      [key]: isFunction\r        ? (...args) => processStyle(null, componentStyles[key](...args))\r        : processStyle(null, componentStyles[key]),\r    };\r  }, {});\r\r}\r","\r\rimport { registerStyles } from './registerStyles';\rimport { getClasses } from './getClasses';\rimport { getStyles } from './getStyles';\r\r\rexport default {\r\r  registerStyles,\r  getClasses,\r  getStyles,\r\r};\r","\r\rexport function getFinalProps(args) {\r\r  const {\r    client,\r    store,\r    componentDef,\r    classesMapping,\r    processedStyles,\r  } = args;\r\r  const {\r    state = () => ({}),\r    actions = () => ({}),\r  } = componentDef;\r\r  const classes = {\r    ...Object.keys(classesMapping).reduce((acum, key) => {\r      return { ...acum, [key]: classesMapping[key] };\r    }, {}),\r  };\r\r  const sections = {\r    ...Object.keys(componentDef.sections || {}).reduce((acum, key) => {\r      return {\r        ...acum,\r        [key]: componentDef.sections[key](client),\r      };\r    }, {}),\r  };\r\r  return (props = {}) => {\r\r    return {\r      props,\r      state: state(props, store),\r      actions: actions(props, store),\r      styles: processedStyles,\r      classes,\r      sections,\r    };\r\r  };\r\r}\r\r","\r\rexport function getStore(Store, registerNumber) {\r\r  return {\r    alerts: Store.objects.alerts,\r    check: Store.methods.check,\r    toggle: Store.methods.toggle,\r    measure: Store.utils.measure,\r    set: Store.methods.set,\r    setItem: Store.methods.setItem,\r    call: Store.process.call,\r    get: Store.methods.get(registerNumber),\r    db: Store.db ? Store.db.query : () => undefined,\r  };\r\r}\r\r","\rimport styles from '../../styles';\r\rimport { getFinalProps } from './getFinalProps';\rimport { getStore } from './getStore';\r\rexport default (Store, client) => componentDef => {\r\r  const registerNumber = Store.methods.registerComponent(componentDef);\r  const processedClasses = styles.getClasses(registerNumber, componentDef.classes);\r  // Provoque Side Effect for classes styles\r  styles.registerStyles(registerNumber, processedClasses.rules);\r\r  const store = getStore(Store, registerNumber);\r  const processedStyles = styles.getStyles(componentDef.styles);\r\r  const solveProps = getFinalProps({\r    client,\r    store,\r    componentDef,\r    classesMapping: processedClasses.mapping || {},\r    processedStyles,\r  });\r\r\r  return function renderComponent(props, children) {\r\r\r    // Called on inital render and every update\r    const render = () => {\r      const finalProps = solveProps(props);\r      const rendered = componentDef.render(finalProps, children);\r      return rendered;\r    };\r\r    // console.log('-------------------', component);\r    const rendered = render();\r\r    return rendered;\r\r  };\r\r};\r","\r\rimport createCustomHoc from './custom/create';\r\rexport function createHoc(Store, client) {\r\r  return createCustomHoc(Store, client);\r\r}\r\r","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {Part} from './part.js';\n\nconst directives = new WeakMap<any, Boolean>();\n\nexport type DirectiveFn = (part: Part) => void;\n\n/**\n * Brands a function as a directive so that lit-html will call the function\n * during template rendering, rather than passing as a value.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object\n *\n * @example\n *\n * ```\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n * ```\n */\nexport const directive = <F extends Function>(f: F): F =>\n    ((...args: any[]) => {\n      const d = f(...args);\n      directives.set(d, true);\n      return d;\n    }) as unknown as F;\n\nexport const isDirective = (o: any) =>\n    typeof o === 'function' && directives.has(o);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = window.customElements !== undefined &&\n    (window.customElements as any).polyfillWrapFlushCallback !== undefined;\n\n/**\n * Reparents nodes, starting from `startNode` (inclusive) to `endNode`\n * (exclusive), into another container (could be the same container), before\n * `beforeNode`. If `beforeNode` is null, it appends the nodes to the\n * container.\n */\nexport const reparentNodes =\n    (container: Node,\n     start: Node|null,\n     end: Node|null = null,\n     before: Node|null = null): void => {\n      let node = start;\n      while (node !== end) {\n        const n = node!.nextSibling;\n        container.insertBefore(node!, before as Node);\n        node = n;\n      }\n    };\n\n/**\n * Removes nodes, starting from `startNode` (inclusive) to `endNode`\n * (exclusive), from `container`.\n */\nexport const removeNodes =\n    (container: Node, startNode: Node|null, endNode: Node|null = null):\n        void => {\n          let node = startNode;\n          while (node !== endNode) {\n            const n = node!.nextSibling;\n            container.removeChild(node!);\n            node = n;\n          }\n        };\n","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\n/**\n * The Part interface represents a dynamic part of a template instance rendered\n * by lit-html.\n */\nexport interface Part {\n  value: any;\n\n  /**\n   * Sets the current part value, but does not write it to the DOM.\n   * @param value The value that will be committed.\n   */\n  setValue(value: any): void;\n\n  /**\n   * Commits the current part value, cause it to actually be written to the DOM.\n   */\n  commit(): void;\n}\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {TemplateResult} from './template-result.js';\n\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\n\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n  parts: TemplatePart[] = [];\n  element: HTMLTemplateElement;\n\n  constructor(result: TemplateResult, element: HTMLTemplateElement) {\n    this.element = element;\n    let index = -1;\n    let partIndex = 0;\n    const nodesToRemove: Node[] = [];\n    const _prepareTemplate = (template: HTMLTemplateElement) => {\n      const content = template.content;\n      // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be\n      // null\n      const walker = document.createTreeWalker(\n          content,\n          133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n          null as any,\n          false);\n      // Keeps track of the last index associated with a part. We try to delete\n      // unnecessary nodes, but we never want to associate two different parts\n      // to the same index. They must have a constant node between.\n      let lastPartIndex = 0;\n      while (walker.nextNode()) {\n        index++;\n        const node = walker.currentNode as Element | Comment | Text;\n        if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n          if ((node as Element).hasAttributes()) {\n            const attributes = (node as Element).attributes;\n            // Per\n            // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n            // attributes are not guaranteed to be returned in document order.\n            // In particular, Edge/IE can return them out of order, so we cannot\n            // assume a correspondance between part index and attribute index.\n            let count = 0;\n            for (let i = 0; i < attributes.length; i++) {\n              if (attributes[i].value.indexOf(marker) >= 0) {\n                count++;\n              }\n            }\n            while (count-- > 0) {\n              // Get the template literal section leading up to the first\n              // expression in this attribute\n              const stringForPart = result.strings[partIndex];\n              // Find the attribute name\n              const name = lastAttributeNameRegex.exec(stringForPart)![2];\n              // Find the corresponding attribute\n              // All bound attributes have had a suffix added in\n              // TemplateResult#getHTML to opt out of special attribute\n              // handling. To look up the attribute value we also need to add\n              // the suffix.\n              const attributeLookupName =\n                  name.toLowerCase() + boundAttributeSuffix;\n              const attributeValue =\n                  (node as Element).getAttribute(attributeLookupName)!;\n              const strings = attributeValue.split(markerRegex);\n              this.parts.push({type: 'attribute', index, name, strings});\n              (node as Element).removeAttribute(attributeLookupName);\n              partIndex += strings.length - 1;\n            }\n          }\n          if ((node as Element).tagName === 'TEMPLATE') {\n            _prepareTemplate(node as HTMLTemplateElement);\n          }\n        } else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n          const data = (node as Text).data!;\n          if (data.indexOf(marker) >= 0) {\n            const parent = node.parentNode!;\n            const strings = data.split(markerRegex);\n            const lastIndex = strings.length - 1;\n            // Generate a new text node for each literal section\n            // These nodes are also used as the markers for node parts\n            for (let i = 0; i < lastIndex; i++) {\n              parent.insertBefore(\n                  (strings[i] === '') ? createMarker() :\n                                        document.createTextNode(strings[i]),\n                  node);\n              this.parts.push({type: 'node', index: ++index});\n            }\n            // If there's no text, we must insert a comment to mark our place.\n            // Else, we can trust it will stick around after cloning.\n            if (strings[lastIndex] === '') {\n              parent.insertBefore(createMarker(), node);\n              nodesToRemove.push(node);\n            } else {\n              (node as Text).data = strings[lastIndex];\n            }\n            // We have a part for each match found\n            partIndex += lastIndex;\n          }\n        } else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n          if ((node as Comment).data === marker) {\n            const parent = node.parentNode!;\n            // Add a new marker node to be the startNode of the Part if any of\n            // the following are true:\n            //  * We don't have a previousSibling\n            //  * The previousSibling is already the start of a previous part\n            if (node.previousSibling === null || index === lastPartIndex) {\n              index++;\n              parent.insertBefore(createMarker(), node);\n            }\n            lastPartIndex = index;\n            this.parts.push({type: 'node', index});\n            // If we don't have a nextSibling, keep this node so we have an end.\n            // Else, we can remove it to save future costs.\n            if (node.nextSibling === null) {\n              (node as Comment).data = '';\n            } else {\n              nodesToRemove.push(node);\n              index--;\n            }\n            partIndex++;\n          } else {\n            let i = -1;\n            while ((i = (node as Comment).data!.indexOf(marker, i + 1)) !==\n                   -1) {\n              // Comment node has a binding marker inside, make an inactive part\n              // The binding won't work, but subsequent bindings will\n              // TODO (justinfagnani): consider whether it's even worth it to\n              // make bindings in comments work\n              this.parts.push({type: 'node', index: -1});\n            }\n          }\n        }\n      }\n    };\n    _prepareTemplate(element);\n    // Remove text binding nodes after the walk to not disturb the TreeWalker\n    for (const n of nodesToRemove) {\n      n.parentNode!.removeChild(n);\n    }\n  }\n}\n\n/**\n * A placeholder for a dynamic expression in an HTML template.\n *\n * There are two built-in part types: AttributePart and NodePart. NodeParts\n * always represent a single dynamic expression, while AttributeParts may\n * represent as many expressions are contained in the attribute.\n *\n * A Template's parts are mutable, so parts can be replaced or modified\n * (possibly to implement different template semantics). The contract is that\n * parts can only be replaced, not removed, added or reordered, and parts must\n * always consume the correct number of values in their `update()` method.\n *\n * TODO(justinfagnani): That requirement is a little fragile. A\n * TemplateInstance could instead be more careful about which values it gives\n * to Part.update().\n */\nexport type TemplatePart = {\n  type: 'node',\n  index: number\n}|{type: 'attribute', index: number, name: string, strings: string[]};\n\nexport const isTemplatePartActive = (part: TemplatePart) => part.index !== -1;\n\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#attributes-0\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-character\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex =\n    /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \\x09\\x0a\\x0c\\x0d\"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {isCEPolyfill} from './dom.js';\nimport {Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {isTemplatePartActive, Template} from './template.js';\n\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n  _parts: Array<Part|undefined> = [];\n  processor: TemplateProcessor;\n  options: RenderOptions;\n  template: Template;\n\n  constructor(\n      template: Template, processor: TemplateProcessor,\n      options: RenderOptions) {\n    this.template = template;\n    this.processor = processor;\n    this.options = options;\n  }\n\n  update(values: any[]) {\n    let i = 0;\n    for (const part of this._parts) {\n      if (part !== undefined) {\n        part.setValue(values[i]);\n      }\n      i++;\n    }\n    for (const part of this._parts) {\n      if (part !== undefined) {\n        part.commit();\n      }\n    }\n  }\n\n  _clone(): DocumentFragment {\n    // When using the Custom Elements polyfill, clone the node, rather than\n    // importing it, to keep the fragment in the template's document. This\n    // leaves the fragment inert so custom elements won't upgrade and\n    // potentially modify their contents by creating a polyfilled ShadowRoot\n    // while we traverse the tree.\n    const fragment = isCEPolyfill ?\n        this.template.element.content.cloneNode(true) as DocumentFragment :\n        document.importNode(this.template.element.content, true);\n\n    const parts = this.template.parts;\n    let partIndex = 0;\n    let nodeIndex = 0;\n    const _prepareInstance = (fragment: DocumentFragment) => {\n      // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be\n      // null\n      const walker = document.createTreeWalker(\n          fragment,\n          133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n          null as any,\n          false);\n      let node = walker.nextNode();\n      // Loop through all the nodes and parts of a template\n      while (partIndex < parts.length && node !== null) {\n        const part = parts[partIndex];\n        // Consecutive Parts may have the same node index, in the case of\n        // multiple bound attributes on an element. So each iteration we either\n        // increment the nodeIndex, if we aren't on a node with a part, or the\n        // partIndex if we are. By not incrementing the nodeIndex when we find a\n        // part, we allow for the next part to be associated with the current\n        // node if neccessasry.\n        if (!isTemplatePartActive(part)) {\n          this._parts.push(undefined);\n          partIndex++;\n        } else if (nodeIndex === part.index) {\n          if (part.type === 'node') {\n            const part = this.processor.handleTextExpression(this.options);\n            part.insertAfterNode(node.previousSibling!);\n            this._parts.push(part);\n          } else {\n            this._parts.push(...this.processor.handleAttributeExpressions(\n                node as Element, part.name, part.strings, this.options));\n          }\n          partIndex++;\n        } else {\n          nodeIndex++;\n          if (node.nodeName === 'TEMPLATE') {\n            _prepareInstance((node as HTMLTemplateElement).content);\n          }\n          node = walker.nextNode();\n        }\n      }\n    };\n    _prepareInstance(fragment);\n    if (isCEPolyfill) {\n      document.adoptNode(fragment);\n      customElements.upgrade(fragment);\n    }\n    return fragment;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {reparentNodes} from './dom.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker} from './template.js';\n\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n  strings: TemplateStringsArray;\n  values: any[];\n  type: string;\n  processor: TemplateProcessor;\n\n  constructor(\n      strings: TemplateStringsArray, values: any[], type: string,\n      processor: TemplateProcessor) {\n    this.strings = strings;\n    this.values = values;\n    this.type = type;\n    this.processor = processor;\n  }\n\n  /**\n   * Returns a string of HTML used to create a `<template>` element.\n   */\n  getHTML(): string {\n    const endIndex = this.strings.length - 1;\n    let html = '';\n    for (let i = 0; i < endIndex; i++) {\n      const s = this.strings[i];\n      // This exec() call does two things:\n      // 1) Appends a suffix to the bound attribute name to opt out of special\n      // attribute value parsing that IE11 and Edge do, like for style and\n      // many SVG attributes. The Template class also appends the same suffix\n      // when looking up attributes to create Parts.\n      // 2) Adds an unquoted-attribute-safe marker for the first expression in\n      // an attribute. Subsequent attribute expressions will use node markers,\n      // and this is safe since attributes with multiple expressions are\n      // guaranteed to be quoted.\n      const match = lastAttributeNameRegex.exec(s);\n      if (match) {\n        // We're starting a new bound attribute.\n        // Add the safe attribute suffix, and use unquoted-attribute-safe\n        // marker.\n        html += s.substr(0, match.index) + match[1] + match[2] +\n            boundAttributeSuffix + match[3] + marker;\n      } else {\n        // We're either in a bound node, or trailing bound attribute.\n        // Either way, nodeMarker is safe to use.\n        html += s + nodeMarker;\n      }\n    }\n    return html + this.strings[endIndex];\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = document.createElement('template');\n    template.innerHTML = this.getHTML();\n    return template;\n  }\n}\n\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTMl in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n  getHTML(): string {\n    return `<svg>${super.getHTML()}</svg>`;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = super.getTemplateElement();\n    const content = template.content;\n    const svgElement = content.firstChild!;\n    content.removeChild(svgElement);\n    reparentNodes(content, svgElement.firstChild);\n    return template;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {isDirective} from './directive.js';\nimport {removeNodes} from './dom.js';\nimport {noChange, nothing, Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {createMarker} from './template.js';\n\nexport const isPrimitive = (value: any) =>\n    (value === null ||\n     !(typeof value === 'object' || typeof value === 'function'));\n\n/**\n * Sets attribute values for AttributeParts, so that the value is only set once\n * even if there are multiple parts for an attribute.\n */\nexport class AttributeCommitter {\n  element: Element;\n  name: string;\n  strings: string[];\n  parts: AttributePart[];\n  dirty = true;\n\n  constructor(element: Element, name: string, strings: string[]) {\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n    this.parts = [];\n    for (let i = 0; i < strings.length - 1; i++) {\n      this.parts[i] = this._createPart();\n    }\n  }\n\n  /**\n   * Creates a single part. Override this to create a differnt type of part.\n   */\n  protected _createPart(): AttributePart {\n    return new AttributePart(this);\n  }\n\n  protected _getValue(): any {\n    const strings = this.strings;\n    const l = strings.length - 1;\n    let text = '';\n\n    for (let i = 0; i < l; i++) {\n      text += strings[i];\n      const part = this.parts[i];\n      if (part !== undefined) {\n        const v = part.value;\n        if (v != null &&\n            (Array.isArray(v) || typeof v !== 'string' && v[Symbol.iterator])) {\n          for (const t of v) {\n            text += typeof t === 'string' ? t : String(t);\n          }\n        } else {\n          text += typeof v === 'string' ? v : String(v);\n        }\n      }\n    }\n\n    text += strings[l];\n    return text;\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      this.element.setAttribute(this.name, this._getValue());\n    }\n  }\n}\n\nexport class AttributePart implements Part {\n  committer: AttributeCommitter;\n  value: any = undefined;\n\n  constructor(comitter: AttributeCommitter) {\n    this.committer = comitter;\n  }\n\n  setValue(value: any): void {\n    if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n      this.value = value;\n      // If the value is a not a directive, dirty the committer so that it'll\n      // call setAttribute. If the value is a directive, it'll dirty the\n      // committer if it calls setValue().\n      if (!isDirective(value)) {\n        this.committer.dirty = true;\n      }\n    }\n  }\n\n  commit() {\n    while (isDirective(this.value)) {\n      const directive = this.value;\n      this.value = noChange;\n      directive(this);\n    }\n    if (this.value === noChange) {\n      return;\n    }\n    this.committer.commit();\n  }\n}\n\nexport class NodePart implements Part {\n  options: RenderOptions;\n  startNode!: Node;\n  endNode!: Node;\n  value: any = undefined;\n  _pendingValue: any = undefined;\n\n  constructor(options: RenderOptions) {\n    this.options = options;\n  }\n\n  /**\n   * Inserts this part into a container.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendInto(container: Node) {\n    this.startNode = container.appendChild(createMarker());\n    this.endNode = container.appendChild(createMarker());\n  }\n\n  /**\n   * Inserts this part between `ref` and `ref`'s next sibling. Both `ref` and\n   * its next sibling must be static, unchanging nodes such as those that appear\n   * in a literal section of a template.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterNode(ref: Node) {\n    this.startNode = ref;\n    this.endNode = ref.nextSibling!;\n  }\n\n  /**\n   * Appends this part into a parent part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendIntoPart(part: NodePart) {\n    part._insert(this.startNode = createMarker());\n    part._insert(this.endNode = createMarker());\n  }\n\n  /**\n   * Appends this part after `ref`\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterPart(ref: NodePart) {\n    ref._insert(this.startNode = createMarker());\n    this.endNode = ref.endNode;\n    ref.endNode = this.startNode;\n  }\n\n  setValue(value: any): void {\n    this._pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this._pendingValue)) {\n      const directive = this._pendingValue;\n      this._pendingValue = noChange;\n      directive(this);\n    }\n    const value = this._pendingValue;\n    if (value === noChange) {\n      return;\n    }\n    if (isPrimitive(value)) {\n      if (value !== this.value) {\n        this._commitText(value);\n      }\n    } else if (value instanceof TemplateResult) {\n      this._commitTemplateResult(value);\n    } else if (value instanceof Node) {\n      this._commitNode(value);\n    } else if (Array.isArray(value) || value[Symbol.iterator]) {\n      this._commitIterable(value);\n    } else if (value === nothing) {\n      this.value = nothing;\n      this.clear();\n    } else {\n      // Fallback, will render the string representation\n      this._commitText(value);\n    }\n  }\n\n  private _insert(node: Node) {\n    this.endNode.parentNode!.insertBefore(node, this.endNode);\n  }\n\n  private _commitNode(value: Node): void {\n    if (this.value === value) {\n      return;\n    }\n    this.clear();\n    this._insert(value);\n    this.value = value;\n  }\n\n  private _commitText(value: string): void {\n    const node = this.startNode.nextSibling!;\n    value = value == null ? '' : value;\n    if (node === this.endNode.previousSibling &&\n        node.nodeType === 3 /* Node.TEXT_NODE */) {\n      // If we only have a single text node between the markers, we can just\n      // set its value, rather than replacing it.\n      // TODO(justinfagnani): Can we just check if this.value is primitive?\n      (node as Text).data = value;\n    } else {\n      this._commitNode(document.createTextNode(\n          typeof value === 'string' ? value : String(value)));\n    }\n    this.value = value;\n  }\n\n  private _commitTemplateResult(value: TemplateResult): void {\n    const template = this.options.templateFactory(value);\n    if (this.value && this.value.template === template) {\n      this.value.update(value.values);\n    } else {\n      // Make sure we propagate the template processor from the TemplateResult\n      // so that we use its syntax extension, etc. The template factory comes\n      // from the render function options so that it can control template\n      // caching and preprocessing.\n      const instance =\n          new TemplateInstance(template, value.processor, this.options);\n      const fragment = instance._clone();\n      instance.update(value.values);\n      this._commitNode(fragment);\n      this.value = instance;\n    }\n  }\n\n  private _commitIterable(value: any): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If _value is an array, then the previous render was of an\n    // iterable and _value will contain the NodeParts from the previous\n    // render. If _value is not an array, clear this part and make a new\n    // array for NodeParts.\n    if (!Array.isArray(this.value)) {\n      this.value = [];\n      this.clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this.value as NodePart[];\n    let partIndex = 0;\n    let itemPart: NodePart|undefined;\n\n    for (const item of value) {\n      // Try to reuse an existing part\n      itemPart = itemParts[partIndex];\n\n      // If no existing part, create a new one\n      if (itemPart === undefined) {\n        itemPart = new NodePart(this.options);\n        itemParts.push(itemPart);\n        if (partIndex === 0) {\n          itemPart.appendIntoPart(this);\n        } else {\n          itemPart.insertAfterPart(itemParts[partIndex - 1]);\n        }\n      }\n      itemPart.setValue(item);\n      itemPart.commit();\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n      this.clear(itemPart && itemPart!.endNode);\n    }\n  }\n\n  clear(startNode: Node = this.startNode) {\n    removeNodes(\n        this.startNode.parentNode!, startNode.nextSibling!, this.endNode);\n  }\n}\n\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart implements Part {\n  element: Element;\n  name: string;\n  strings: string[];\n  value: any = undefined;\n  _pendingValue: any = undefined;\n\n  constructor(element: Element, name: string, strings: string[]) {\n    if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n      throw new Error(\n          'Boolean attributes can only contain a single expression');\n    }\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n  }\n\n  setValue(value: any): void {\n    this._pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this._pendingValue)) {\n      const directive = this._pendingValue;\n      this._pendingValue = noChange;\n      directive(this);\n    }\n    if (this._pendingValue === noChange) {\n      return;\n    }\n    const value = !!this._pendingValue;\n    if (this.value !== value) {\n      if (value) {\n        this.element.setAttribute(this.name, '');\n      } else {\n        this.element.removeAttribute(this.name);\n      }\n    }\n    this.value = value;\n    this._pendingValue = noChange;\n  }\n}\n\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n  single: boolean;\n\n  constructor(element: Element, name: string, strings: string[]) {\n    super(element, name, strings);\n    this.single =\n        (strings.length === 2 && strings[0] === '' && strings[1] === '');\n  }\n\n  protected _createPart(): PropertyPart {\n    return new PropertyPart(this);\n  }\n\n  _getValue() {\n    if (this.single) {\n      return this.parts[0].value;\n    }\n    return super._getValue();\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      (this.element as any)[this.name] = this._getValue();\n    }\n  }\n}\n\nexport class PropertyPart extends AttributePart {}\n\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n\ntry {\n  const options = {\n    get capture() {\n      eventOptionsSupported = true;\n      return false;\n    }\n  };\n  window.addEventListener('test', options as any, options);\n  window.removeEventListener('test', options as any, options);\n} catch (_e) {\n}\n\nexport class EventPart implements Part {\n  element: Element;\n  eventName: string;\n  eventContext?: EventTarget;\n  value: any = undefined;\n  _options?: AddEventListenerOptions;\n  _pendingValue: any = undefined;\n  _boundHandleEvent: (event: Event) => void;\n\n  constructor(element: Element, eventName: string, eventContext?: EventTarget) {\n    this.element = element;\n    this.eventName = eventName;\n    this.eventContext = eventContext;\n    this._boundHandleEvent = (e) => this.handleEvent(e);\n  }\n\n  setValue(value: any): void {\n    this._pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this._pendingValue)) {\n      const directive = this._pendingValue;\n      this._pendingValue = noChange;\n      directive(this);\n    }\n    if (this._pendingValue === noChange) {\n      return;\n    }\n\n    const newListener = this._pendingValue;\n    const oldListener = this.value;\n    const shouldRemoveListener = newListener == null ||\n        oldListener != null &&\n            (newListener.capture !== oldListener.capture ||\n             newListener.once !== oldListener.once ||\n             newListener.passive !== oldListener.passive);\n    const shouldAddListener =\n        newListener != null && (oldListener == null || shouldRemoveListener);\n\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n          this.eventName, this._boundHandleEvent, this._options);\n    }\n    if (shouldAddListener) {\n      this._options = getOptions(newListener);\n      this.element.addEventListener(\n          this.eventName, this._boundHandleEvent, this._options);\n    }\n    this.value = newListener;\n    this._pendingValue = noChange;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this.value === 'function') {\n      this.value.call(this.eventContext || this.element, event);\n    } else {\n      this.value.handleEvent(event);\n    }\n  }\n}\n\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o: any) => o &&\n    (eventOptionsSupported ?\n         {capture: o.capture, passive: o.passive, once: o.once} :\n         o.capture);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {Part} from './part.js';\nimport {AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\n\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor implements TemplateProcessor {\n  /**\n   * Create parts for an attribute-position binding, given the event, attribute\n   * name, and string literals.\n   *\n   * @param element The element containing the binding\n   * @param name  The attribute name\n   * @param strings The string literals. There are always at least two strings,\n   *   event for fully-controlled bindings with a single expression.\n   */\n  handleAttributeExpressions(\n      element: Element, name: string, strings: string[],\n      options: RenderOptions): Part[] {\n    const prefix = name[0];\n    if (prefix === '.') {\n      const comitter = new PropertyCommitter(element, name.slice(1), strings);\n      return comitter.parts;\n    }\n    if (prefix === '@') {\n      return [new EventPart(element, name.slice(1), options.eventContext)];\n    }\n    if (prefix === '?') {\n      return [new BooleanAttributePart(element, name.slice(1), strings)];\n    }\n    const comitter = new AttributeCommitter(element, name, strings);\n    return comitter.parts;\n  }\n  /**\n   * Create parts for a text-position binding.\n   * @param templateFactory\n   */\n  handleTextExpression(options: RenderOptions) {\n    return new NodePart(options);\n  }\n}\n\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\n/**\n * A function type that creates a Template from a TemplateResult.\n *\n * This is a hook into the template-creation process for rendering that\n * requires some modification of templates before they're used, like ShadyCSS,\n * which must add classes to elements and remove styles.\n *\n * Templates should be cached as aggressively as possible, so that many\n * TemplateResults produced from the same expression only do the work of\n * creating the Template the first time.\n *\n * Templates are usually cached by TemplateResult.strings and\n * TemplateResult.type, but may be cached by other keys if this function\n * modifies the template.\n *\n * Note that currently TemplateFactories must not add, remove, or reorder\n * expressions, because there is no way to describe such a modification\n * to render() so that values are interpolated to the correct place in the\n * template instances.\n */\nexport type TemplateFactory = (result: TemplateResult) => Template;\n\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result: TemplateResult) {\n  let templateCache = templateCaches.get(result.type);\n  if (templateCache === undefined) {\n    templateCache = {\n      stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n      keyString: new Map<string, Template>()\n    };\n    templateCaches.set(result.type, templateCache);\n  }\n\n  let template = templateCache.stringsArray.get(result.strings);\n  if (template !== undefined) {\n    return template;\n  }\n\n  // If the TemplateStringsArray is new, generate a key from the strings\n  // This key is shared between all templates with identical content\n  const key = result.strings.join(marker);\n\n  // Check if we already have a Template for this key\n  template = templateCache.keyString.get(key);\n  if (template === undefined) {\n    // If we have not seen this key before, create a new Template\n    template = new Template(result, result.getTemplateElement());\n    // Cache the Template for this key\n    templateCache.keyString.set(key, template);\n  }\n\n  // Cache all future queries for this TemplateStringsArray\n  templateCache.stringsArray.set(result.strings, template);\n  return template;\n}\n\n/**\n * The first argument to JS template tags retain identity across multiple\n * calls to a tag for the same literal, so we can cache work done per literal\n * in a Map.\n *\n * Safari currently has a bug which occasionally breaks this behaviour, so we\n * need to cache the Template at two levels. We first cache the\n * TemplateStringsArray, and if that fails, we cache a key constructed by\n * joining the strings array.\n */\nexport type templateCache = {\n  stringsArray: WeakMap<TemplateStringsArray, Template>;\n  keyString: Map<string, Template>;\n};\n\nexport const templateCaches = new Map<string, templateCache>();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {removeNodes} from './dom.js';\nimport {NodePart} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {templateFactory} from './template-factory.js';\nimport {TemplateResult} from './template-result.js';\n\nexport const parts = new WeakMap<Node, NodePart>();\n\n/**\n * Renders a template to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result a TemplateResult created by evaluating a template tag like\n *     `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render =\n    (result: TemplateResult,\n     container: Element|DocumentFragment,\n     options?: Partial<RenderOptions>) => {\n      let part = parts.get(container);\n      if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart({\n                               templateFactory,\n                               ...options,\n                             }));\n        part.appendInto(container);\n      }\n      part.setValue(result);\n      part.commit();\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {defaultTemplateProcessor} from './lib/default-template-processor.js';\nimport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\n\nexport {DefaultTemplateProcessor, defaultTemplateProcessor} from './lib/default-template-processor.js';\nexport {directive, DirectiveFn, isDirective} from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport {removeNodes, reparentNodes} from './lib/dom.js';\nexport {noChange, nothing, Part} from './lib/part.js';\nexport {AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isPrimitive, NodePart, PropertyCommitter, PropertyPart} from './lib/parts.js';\nexport {RenderOptions} from './lib/render-options.js';\nexport {parts, render} from './lib/render.js';\nexport {templateCaches, templateFactory} from './lib/template-factory.js';\nexport {TemplateInstance} from './lib/template-instance.js';\nexport {TemplateProcessor} from './lib/template-processor.js';\nexport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\nexport {createMarker, isTemplatePartActive, Template} from './lib/template.js';\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings: TemplateStringsArray, ...values: any[]) =>\n    new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings: TemplateStringsArray, ...values: any[]) =>\n    new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {directive, Part} from '../lit-html.js';\n\nconst previousValues = new WeakMap<Part, unknown>();\n\n/**\n * Prevents re-render of a template function until a single value or an array of\n * values changes.\n *\n * Example:\n *\n * ```js\n * html`\n *   <div>\n *     ${guard([user.id, company.id], () => html`...`)}\n *   </div>\n * ```\n *\n * In this case, the template only renders if either `user.id` or `company.id`\n * changes.\n *\n * guard() is useful with immutable data patterns, by preventing expensive work\n * until data updates.\n *\n * Example:\n *\n * ```js\n * html`\n *   <div>\n *     ${guard([immutableItems], () => immutableItems.map(i => html`${i}`))}\n *   </div>\n * ```\n *\n * In this case, items are mapped over only when the array reference changes.\n *\n * @param value the value to check before re-rendering\n * @param f the template function\n */\nexport const guard =\n    directive((value: unknown, f: () => unknown) => (part: Part): void => {\n      const previousValue = previousValues.get(part);\n      if (Array.isArray(value)) {\n        // Dirty-check arrays by item\n        if (Array.isArray(previousValue) &&\n            previousValue.length === value.length &&\n            value.every((v, i) => v === previousValue[i])) {\n          return;\n        }\n      } else if (\n          previousValue === value &&\n          (value !== undefined || previousValues.has(part))) {\n        // Dirty-check non-arrays by identity\n        return;\n      }\n\n      part.setValue(f());\n      // Copy the value if it's an array so that if it's mutated we don't forget\n      // what the previous values were.\n      previousValues.set(\n          part, Array.isArray(value) ? Array.from(value) : value);\n    });\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {DirectiveFn} from '../lib/directive.js';\nimport {createMarker, directive, NodePart, Part, removeNodes, reparentNodes} from '../lit-html.js';\n\nexport type KeyFn<T> = (item: T, index: number) => any;\nexport type ItemTemplate<T> = (item: T, index: number) => any;\n\n// Helper functions for manipulating parts\n// TODO(kschaaf): Refactor into Part API?\nconst createAndInsertPart =\n    (containerPart: NodePart, beforePart?: NodePart): NodePart => {\n      const container = containerPart.startNode.parentNode as Node;\n      const beforeNode = beforePart === undefined ? containerPart.endNode :\n                                                    beforePart.startNode;\n      const startNode = container.insertBefore(createMarker(), beforeNode);\n      container.insertBefore(createMarker(), beforeNode);\n      const newPart = new NodePart(containerPart.options);\n      newPart.insertAfterNode(startNode);\n      return newPart;\n    };\n\nconst updatePart = (part: NodePart, value: unknown) => {\n  part.setValue(value);\n  part.commit();\n  return part;\n};\n\nconst insertPartBefore =\n    (containerPart: NodePart, part: NodePart, ref?: NodePart) => {\n      const container = containerPart.startNode.parentNode as Node;\n      const beforeNode = ref ? ref.startNode : containerPart.endNode;\n      const endNode = part.endNode.nextSibling;\n      if (endNode !== beforeNode) {\n        reparentNodes(container, part.startNode, endNode, beforeNode);\n      }\n    };\n\nconst removePart = (part: NodePart) => {\n  removeNodes(\n      part.startNode.parentNode!, part.startNode, part.endNode.nextSibling);\n};\n\n// Helper for generating a map of array item to its index over a subset\n// of an array (used to lazily generate `newKeyToIndexMap` and\n// `oldKeyToIndexMap`)\nconst generateMap = (list: unknown[], start: number, end: number) => {\n  const map = new Map();\n  for (let i = start; i <= end; i++) {\n    map.set(list[i], i);\n  }\n  return map;\n};\n\n// Stores previous ordered list of parts and map of key to index\nconst partListCache = new WeakMap<NodePart, (NodePart | null)[]>();\nconst keyListCache = new WeakMap<NodePart, unknown[]>();\n\n/**\n * A directive that repeats a series of values (usually `TemplateResults`)\n * generated from an iterable, and updates those items efficiently when the\n * iterable changes based on user-provided `keys` associated with each item.\n *\n * Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\n * meaning previous DOM for a given key is moved into the new position if\n * needed, and DOM will never be reused with values for different keys (new DOM\n * will always be created for new keys). This is generally the most efficient\n * way to use `repeat` since it performs minimum unnecessary work for insertions\n * amd removals.\n *\n * IMPORTANT: If providing a `keyFn`, keys *must* be unique for all items in a\n * given call to `repeat`. The behavior when two or more items have the same key\n * is undefined.\n *\n * If no `keyFn` is provided, this directive will perform similar to mapping\n * items to values, and DOM will be reused against potentially different items.\n */\nexport const repeat = directive(\n    <T>(items: Iterable<T>,\n        keyFnOrTemplate: KeyFn<T>|ItemTemplate<T>,\n        template?: ItemTemplate<T>): DirectiveFn => {\n      let keyFn: KeyFn<T>;\n      if (template === undefined) {\n        template = keyFnOrTemplate;\n      } else if (keyFnOrTemplate !== undefined) {\n        keyFn = keyFnOrTemplate as KeyFn<T>;\n      }\n\n      return (containerPart: Part): void => {\n        if (!(containerPart instanceof NodePart)) {\n          throw new Error('repeat can only be used in text bindings');\n        }\n        // Old part & key lists are retrieved from the last update (associated\n        // with the part for this instance of the directive)\n        const oldParts = partListCache.get(containerPart) || [];\n        const oldKeys = keyListCache.get(containerPart) || [];\n\n        // New part list will be built up as we go (either reused from old parts\n        // or created for new keys in this update). This is saved in the above\n        // cache at the end of the update.\n        const newParts: NodePart[] = [];\n\n        // New value list is eagerly generated from items along with a parallel\n        // array indicating its key.\n        const newValues: unknown[] = [];\n        const newKeys: unknown[] = [];\n        let index = 0;\n        for (const item of items) {\n          newKeys[index] = keyFn ? keyFn(item, index) : index;\n          newValues[index] = template !(item, index);\n          index++;\n        }\n\n        // Maps from key to index for current and previous update; these are\n        // generated lazily only when needed as a performance optimization,\n        // since they are only required for multiple non-contiguous changes in\n        // the list, which are less common.\n        let newKeyToIndexMap!: Map<unknown, number>;\n        let oldKeyToIndexMap!: Map<unknown, number>;\n\n        // Head and tail pointers to old parts and new values\n        let oldHead = 0;\n        let oldTail = oldParts.length - 1;\n        let newHead = 0;\n        let newTail = newValues.length - 1;\n\n        // Overview of O(n) reconciliation algorithm (general approach based on\n        // ideas found in ivi, vue, snabbdom, etc.):\n        //\n        // * We start with the list of old parts and new values (and arrays of\n        //   their respective keys), head/tail pointers into each, and we build\n        //   up the new list of parts by updating (and when needed, moving) old\n        //   parts or creating new ones. The initial scenario might look like\n        //   this (for brevity of the diagrams, the numbers in the array reflect\n        //   keys associated with the old parts or new values, although keys and\n        //   parts/values are actually stored in parallel arrays indexed using\n        //   the same head/tail pointers):\n        //\n        //      oldHead v                 v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [ ,  ,  ,  ,  ,  ,  ]\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6] <- reflects the user's new item\n        //   order\n        //      newHead ^                 ^ newTail\n        //\n        // * Iterate old & new lists from both sides, updating, swapping, or\n        //   removing parts at the head/tail locations until neither head nor\n        //   tail can move.\n        //\n        // * Example below: keys at head pointers match, so update old part 0\n        // in-\n        //   place (no need to move it) and record part 0 in the `newParts`\n        //   list. The last thing we do is advance the `oldHead` and `newHead`\n        //   pointers (will be reflected in the next diagram).\n        //\n        //      oldHead v                 v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [0,  ,  ,  ,  ,  ,  ] <- heads matched: update 0 and\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    advance both oldHead & newHead\n        //      newHead ^                 ^ newTail\n        //\n        // * Example below: head pointers don't match, but tail pointers do, so\n        //   update part 6 in place (no need to move it), and record part 6 in\n        //   the `newParts` list. Last, advance the `oldTail` and `oldHead`\n        //   pointers.\n        //\n        //         oldHead v              v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [0,  ,  ,  ,  ,  , 6] <- tails matched: update 6 and\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    advance both oldTail & newTail\n        //         newHead ^              ^ newTail\n        //\n        // * If neither head nor tail match; next check if one of the old\n        // head/tail\n        //   items was removed. We first need to generate the reverse map of new\n        //   keys to index (`newKeyToIndexMap`), which is done once lazily as a\n        //   performance optimization, since we only hit this case if multiple\n        //   non-contiguous changes were made. Note that for contiguous removal\n        //   anywhere in the list, the head and tails would advance from either\n        //   end and pass each other before we get to this case and removals\n        //   would be handled in the final while loop without needing to\n        //   generate the map.\n        //\n        // * Example below: The key at `oldTail` was removed (no longer in the\n        //   `newKeyToIndexMap`), so remove that part from the DOM and advance\n        //   just the `oldTail` pointer.\n        //\n        //         oldHead v           v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [0,  ,  ,  ,  ,  , 6] <- 5 not in new map; remove 5 and\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    advance oldTail\n        //         newHead ^           ^ newTail\n        //\n        // * Once head and tail cannot move, any mismatches are due to either\n        // new or\n        //   moved items; if a new key is in the previous \"old key to old index\"\n        //   map, move the old part to the new location, otherwise create and\n        //   insert a new part. Note that when moving an old part we null its\n        //   position in the oldParts array if it lies between the head and tail\n        //   so we know to skip it when the pointers get there.\n        //\n        // * Example below: neither head nor tail match, and neither were\n        // removed;\n        //   so find the `newHead` key in the `oldKeyToIndexMap`, and move that\n        //   old part's DOM into the next head position (before\n        //   `oldParts[oldHead]`). Last, null the part in the `oldPart` array\n        //   since it was somewhere in the remaining oldParts still to be\n        //   scanned (between the head and tail pointers) so that we know to\n        //   skip that old part on future iterations.\n        //\n        //         oldHead v        v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2,  ,  ,  ,  , 6] <- stuck; update & move 2 into\n        //   place newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance newHead\n        //         newHead ^           ^ newTail\n        //\n        // * Note that for moves/insertions like the one above, a part inserted\n        // at\n        //   the head pointer is inserted before the current\n        //   `oldParts[oldHead]`, and a part inserted at the tail pointer is\n        //   inserted before `newParts[newTail+1]`. The seeming asymmetry lies\n        //   in the fact that new parts are moved into place outside in, so to\n        //   the right of the head pointer are old parts, and to the right of\n        //   the tail pointer are new parts.\n        //\n        // * We always restart back from the top of the algorithm, allowing\n        // matching\n        //   and simple updates in place to continue...\n        //\n        // * Example below: the head pointers once again match, so simply update\n        //   part 1 and record it in the `newParts` array.  Last, advance both\n        //   head pointers.\n        //\n        //         oldHead v        v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1,  ,  ,  , 6] <- heads matched; update 1 and\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    advance both oldHead & newHead\n        //            newHead ^        ^ newTail\n        //\n        // * As mentioned above, items that were moved as a result of being\n        // stuck\n        //   (the final else clause in the code below) are marked with null, so\n        //   we always advance old pointers over these so we're comparing the\n        //   next actual old value on either end.\n        //\n        // * Example below: `oldHead` is null (already placed in newParts), so\n        //   advance `oldHead`.\n        //\n        //            oldHead v     v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6] // old head already used; advance\n        //   newParts: [0, 2, 1,  ,  ,  , 6] // oldHead\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n        //               newHead ^     ^ newTail\n        //\n        // * Note it's not critical to mark old parts as null when they are\n        // moved\n        //   from head to tail or tail to head, since they will be outside the\n        //   pointer range and never visited again.\n        //\n        // * Example below: Here the old tail key matches the new head key, so\n        //   the part at the `oldTail` position and move its DOM to the new\n        //   head position (before `oldParts[oldHead]`). Last, advance `oldTail`\n        //   and `newHead` pointers.\n        //\n        //               oldHead v  v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1, 4,  ,  , 6] <- old tail matches new head:\n        //   update newKeys:  [0, 2, 1, 4, 3, 7, 6]   & move 4, advance oldTail\n        //   & newHead\n        //               newHead ^     ^ newTail\n        //\n        // * Example below: Old and new head keys match, so update the old head\n        //   part in place, and advance the `oldHead` and `newHead` pointers.\n        //\n        //               oldHead v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1, 4, 3,   ,6] <- heads match: update 3 and\n        //   advance newKeys:  [0, 2, 1, 4, 3, 7, 6]    oldHead & newHead\n        //                  newHead ^  ^ newTail\n        //\n        // * Once the new or old pointers move past each other then all we have\n        //   left is additions (if old list exhausted) or removals (if new list\n        //   exhausted). Those are handled in the final while loops at the end.\n        //\n        // * Example below: `oldHead` exceeded `oldTail`, so we're done with the\n        //   main loop.  Create the remaining part and insert it at the new head\n        //   position, and the update is complete.\n        //\n        //                   (oldHead > oldTail)\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1, 4, 3, 7 ,6] <- create and insert 7\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n        //                     newHead ^ newTail\n        //\n        // * Note that the order of the if/else clauses is not important to the\n        //   algorithm, as long as the null checks come first (to ensure we're\n        //   always working on valid old parts) and that the final else clause\n        //   comes last (since that's where the expensive moves occur). The\n        //   order of remaining clauses is is just a simple guess at which cases\n        //   will be most common.\n        //\n        // * TODO(kschaaf) Note, we could calculate the longest increasing\n        //   subsequence (LIS) of old items in new position, and only move those\n        //   not in the LIS set. However that costs O(nlogn) time and adds a bit\n        //   more code, and only helps make rare types of mutations require\n        //   fewer moves. The above handles removes, adds, reversal, swaps, and\n        //   single moves of contiguous items in linear time, in the minimum\n        //   number of moves. As the number of multiple moves where LIS might\n        //   help approaches a random shuffle, the LIS optimization becomes less\n        //   helpful, so it seems not worth the code at this point. Could\n        //   reconsider if a compelling case arises.\n\n        while (oldHead <= oldTail && newHead <= newTail) {\n          if (oldParts[oldHead] === null) {\n            // `null` means old part at head has already been used below; skip\n            oldHead++;\n          } else if (oldParts[oldTail] === null) {\n            // `null` means old part at tail has already been used below; skip\n            oldTail--;\n          } else if (oldKeys[oldHead] === newKeys[newHead]) {\n            // Old head matches new head; update in place\n            newParts[newHead] =\n                updatePart(oldParts[oldHead]!, newValues[newHead]);\n            oldHead++;\n            newHead++;\n          } else if (oldKeys[oldTail] === newKeys[newTail]) {\n            // Old tail matches new tail; update in place\n            newParts[newTail] =\n                updatePart(oldParts[oldTail]!, newValues[newTail]);\n            oldTail--;\n            newTail--;\n          } else if (oldKeys[oldHead] === newKeys[newTail]) {\n            // Old head matches new tail; update and move to new tail\n            newParts[newTail] =\n                updatePart(oldParts[oldHead]!, newValues[newTail]);\n            insertPartBefore(\n                containerPart, oldParts[oldHead]!, newParts[newTail + 1]);\n            oldHead++;\n            newTail--;\n          } else if (oldKeys[oldTail] === newKeys[newHead]) {\n            // Old tail matches new head; update and move to new head\n            newParts[newHead] =\n                updatePart(oldParts[oldTail]!, newValues[newHead]);\n            insertPartBefore(\n                containerPart, oldParts[oldTail]!, oldParts[oldHead]!);\n            oldTail--;\n            newHead++;\n          } else {\n            if (newKeyToIndexMap === undefined) {\n              // Lazily generate key-to-index maps, used for removals & moves\n              // below\n              newKeyToIndexMap = generateMap(newKeys, newHead, newTail);\n              oldKeyToIndexMap = generateMap(oldKeys, oldHead, oldTail);\n            }\n            if (!newKeyToIndexMap.has(oldKeys[oldHead])) {\n              // Old head is no longer in new list; remove\n              removePart(oldParts[oldHead]!);\n              oldHead++;\n            } else if (!newKeyToIndexMap.has(oldKeys[oldTail])) {\n              // Old tail is no longer in new list; remove\n              removePart(oldParts[oldTail]!);\n              oldTail--;\n            } else {\n              // Any mismatches at this point are due to additions or moves; see\n              // if we have an old part we can reuse and move into place\n              const oldIndex = oldKeyToIndexMap.get(newKeys[newHead]);\n              const oldPart =\n                  oldIndex !== undefined ? oldParts[oldIndex] : null;\n              if (oldPart === null) {\n                // No old part for this value; create a new one and insert it\n                const newPart =\n                    createAndInsertPart(containerPart, oldParts[oldHead]!);\n                updatePart(newPart, newValues[newHead]);\n                newParts[newHead] = newPart;\n              } else {\n                // Reuse old part\n                newParts[newHead] = updatePart(oldPart, newValues[newHead]);\n                insertPartBefore(containerPart, oldPart, oldParts[oldHead]!);\n                // This marks the old part as having been used, so that it will\n                // be skipped in the first two checks above\n                oldParts[oldIndex as number] = null;\n              }\n              newHead++;\n            }\n          }\n        }\n        // Add parts for any remaining new values\n        while (newHead <= newTail) {\n          // For all remaining additions, we insert before last new tail,\n          // since old pointers are no longer valid\n          const newPart =\n              createAndInsertPart(containerPart, newParts[newTail + 1]!);\n          updatePart(newPart, newValues[newHead]);\n          newParts[newHead++] = newPart;\n        }\n        // Remove any remaining unused old parts\n        while (oldHead <= oldTail) {\n          const oldPart = oldParts[oldHead++];\n          if (oldPart !== null) {\n            removePart(oldPart);\n          }\n        }\n        // Save order of new parts for next round\n        partListCache.set(containerPart, newParts);\n        keyListCache.set(containerPart, newKeys);\n      };\n    });\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {isPrimitive} from '../lib/parts.js';\nimport {directive, NodePart, Part} from '../lit-html.js';\n\ninterface PreviousValue {\n  value: any;\n  fragment: DocumentFragment;\n}\n\n// For each part, remember the value that was last rendered to the part by the\n// unsafeHTML directive, and the DocumentFragment that was last set as a value.\n// The DocumentFragment is used as a unique key to check if the last value\n// rendered to the part was with unsafeHTML. If not, we'll always re-render the\n// value passed to unsafeHTML.\nconst previousValues = new WeakMap<NodePart, PreviousValue>();\n\n/**\n * Renders the result as HTML, rather than text.\n *\n * Note, this is unsafe to use with any user-provided input that hasn't been\n * sanitized or escaped, as it may lead to cross-site-scripting\n * vulnerabilities.\n */\nexport const unsafeHTML = directive((value: any) => (part: Part): void => {\n  if (!(part instanceof NodePart)) {\n    throw new Error('unsafeHTML can only be used in text bindings');\n  }\n\n  const previousValue = previousValues.get(part);\n\n  if (previousValue !== undefined && isPrimitive(value) &&\n      value === previousValue.value && part.value === previousValue.fragment) {\n    return;\n  }\n\n  const template = document.createElement('template');\n  template.innerHTML = value;\n  const fragment = document.importNode(template.content, true);\n  part.setValue(fragment);\n  previousValues.set(part, {value, fragment});\n});\n","\nimport { createHoc } from './hoc/createHoc';\n\nimport { html as htmlFn, render } from 'lit-html';\nimport { guard } from 'lit-html/directives/guard.js';\nimport { repeat} from 'lit-html/directives/repeat.js';\nimport { unsafeHTML} from 'lit-html/directives/unsafe-html.js';\n\nconst html = htmlFn;\nhtml.guard = guard;\nhtml.repeat = repeat;\nhtml.unsafeHTML = unsafeHTML;\n\nexport {\n  html,\n  render,\n  createHoc,\n};\n\n","\nimport { html, createHoc } from './ui';\n\nexport function createClient(args) {\n\n  const {\n    Store,\n    lib,\n    components,\n    fragments,\n  } = args;\n\n  // Initialization\n  const client = {\n    html,\n    ui: {},\n  };\n\n  // Store is necessary to create the HOC\n  client.hoc = createHoc(Store, client);\n\n  // Attach lib for convenience\n  client.lib = lib;\n\n  // Components will be available to fragments and pages\n  client.ui.components = Object.keys(components).reduce((acum, key) => {\n    return {\n      ...acum,\n      [key]: components[key](client),\n    };\n  }, {});\n\n  // Fragments will be available to pages\n  client.ui.fragments = Object.keys(fragments).reduce((acum, key) => {\n    return {\n      ...acum,\n      [key]: fragments[key](client),\n    };\n  }, {});\n\n  return client;\n\n}\n\n","\nimport createStore from './store';\nimport { createClient } from './createClient';\nimport { render } from './ui';\nimport globals from './globals';\n\nconst isProduction = process.env.NODE_ENV === 'production';\n\nexport default {\n\n  init: args => {\n\n    const {\n      store,\n      lib,\n      rootComponent,\n      components = {},\n      fragments = {},\n    } = args;\n\n    const Store = createStore(store, render);\n    if (!isProduction) window.Store = Store;\n\n    const client = createClient({\n      Store,\n      lib,\n      components,\n      fragments,\n    });\n\n    window.onload = () => {\n      Store.methods.startApp({\n        appData: window[globals.WINDOW_APP_DATA],\n        rootComponent: rootComponent(client),\n      });\n    };\n\n    return client;\n\n  },\n\n};\n\n","import config from '../config.js';\n\nlet client;\nconst isProduction = process.env.NODE_ENV === 'production';\n\nif (isProduction) {\n  client = window.jmaguirrei_client.init(config.client);\n} else {\n  client = require('@jmaguirrei/client').default.init(config.client);\n}\n\nexport default client;\n"]}