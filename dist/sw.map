{"version":3,"sources":["log.js","onInstall.js","onActivate.js","getRequestType.js","onFetch.js","index.js"],"names":["FILLER_LENGTH","MAX_PAYLOAD_LENGTH","log","str","payload","filler","repeat","length","console","payloadStr","substr","cacheFiles","now","after","onInstall","e","waitUntil","self","caches","open","cacheName","then","cache","addAll","catch","err","onActivate","keys","cacheNames","Promise","all","filter","map","delete","urls","getRequestType","url","startsWith","indexOf","onFetch","request","requestType","skipSW","includes","fetch","respondWith","cache_","match","cachedResponse","networkResponse","put","clone","addEventListener"],"mappings":"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","file":"sw.map","sourceRoot":"../../_root/public/sw","sourcesContent":["\nconst FILLER_LENGTH = 55;\nconst MAX_PAYLOAD_LENGTH = 40;\n\nexport function log(str, payload) {\n\n  const filler = '-'.repeat(FILLER_LENGTH - str.length);\n  if (!payload) return console.log(`[SW] ${filler}> ${str}`);\n\n  if (typeof payload !== 'string') return console.log(`[SW] ${filler}> ${str} `, payload);\n\n  if (payload.length < MAX_PAYLOAD_LENGTH) return console.log(`[SW] ${filler}> ${str} `, payload);\n\n  const payloadStr = payload.substr(payload.length - MAX_PAYLOAD_LENGTH, 1000);\n  return console.log(`[SW] ${filler}> ${str} `, payloadStr);\n\n}\n\n\n","\n/* global self */\nimport { log } from './log';\n\nconst cacheFiles = {\n  now: [\n    './app.js',\n    './index.html',\n    'https://fonts.googleapis.com/css?family=Source+Sans+Pro',\n    '../icons/favicon.ico'\n  ],\n  after: [\n    // icons\n    '../icons/android-chrome-192x192.png',\n    '../icons/android-chrome-256x256.png',\n    '../icons/android-chrome-512x512.png',\n    '../icons/apple-touch-icon-57x57.png',\n    '../icons/apple-touch-icon-60x60.png',\n    '../icons/apple-touch-icon-72x72.png',\n    '../icons/apple-touch-icon-76x76.png',\n    '../icons/apple-touch-icon-114x114.png',\n    '../icons/apple-touch-icon-120x120.png',\n    '../icons/apple-touch-icon-144x144.png',\n    '../icons/apple-touch-icon-152x152.png',\n    '../icons/apple-touch-icon-180x180.png',\n    '../icons/favicon-32x32.png',\n    '../icons/favicon-16x16.png',\n    // splash\n    '../splash/iphone5_splash.png',\n    '../splash/iphone6_splash.png',\n    '../splash/iphoneplus_splash.png',\n    '../splash/iphonex_splash.png',\n    '../splash/iphonexr_splash.png',\n    '../splash/iphonexsmax_splash.png',\n    '../splash/ipad_splash.png',\n    '../splash/ipadpro1_splash.png',\n    '../splash/ipadpro3_splash.png',\n    '../splash/ipadpro2_splash.png',\n  ],\n};\n\n\n\nexport function onInstall(e) {\n\n  // e.waitUntil((\n  //   async () => {\n  //     const cache = self.caches.open(self.cacheName);\n  //     if (!cache) return log('Install: Error');\n  //     log('Installed');\n  //     cache.addAll(cacheFiles.after);\n  //     return await cache.addAll(cacheFiles.now);\n  //   }\n  // )());\n\n\n  e.waitUntil(\n    self.caches.open(self.cacheName)\n    .then(cache => {\n      log('Installed');\n      cache.addAll(cacheFiles.after);\n      return cache.addAll(cacheFiles.now);\n    })\n    .catch(err => {\n      log('Install: Error', err);\n    })\n  );\n\n}\n","\n/* global self */\nimport { log } from './log';\n\nexport function onActivate(e) {\n\n  // e.waitUntil((\n  //   async () => {\n  //     log('Activated');\n  //     const cacheNames = self.caches.keys();\n  //     return await Promise.all(\n  //       cacheNames\n  //       .filter(cacheName => cacheName !== self.cacheName)\n  //       .map(cacheName => {\n  //         log('Removing cached files from ', cacheName);\n  //         self.caches.delete(cacheName);\n  //       })\n  //     );\n  //   }\n  // )());\n\n  e.waitUntil(\n    self.caches.keys()\n    .then(cacheNames => {\n      log('Activated');\n      return Promise.all(\n        cacheNames\n        .filter(cacheName => cacheName !== self.cacheName)\n        .map(cacheName => {\n          log('Removing cached files from ', cacheName);\n          self.caches.delete(cacheName);\n        })\n      );\n    })\n  );\n}\n\n\n\n","\n\nconst urls = [ 'https://museeker.io', 'http://localhost' ];\n\nexport function getRequestType(url) {\n\n  const isSameOrigin = url.startsWith(urls[0]) || url.startsWith(urls[1]);\n  if (!isSameOrigin) return 'external';\n\n  const isApi = url.indexOf('/api/') >= 0;\n  if (isApi) return 'api';\n\n  const isBase = url.indexOf('/base-') >= 0;\n  if (isBase) return 'base';\n\n  const isImage = url.indexOf('/icons/') >= 0 || url.indexOf('/splash/') >= 0;\n  if (isImage) return 'image';\n\n  return 'page';\n\n}\n\n\n","\n/* global self */\nimport { log } from './log';\nimport { getRequestType } from './getRequestType';\n\nexport function onFetch(e) {\n\n  const url = e.request.url;\n  const requestType = getRequestType(url);\n  const skipSW = [ 'page', 'api' ].includes(requestType);\n  log('RequestType', requestType);\n\n  if (skipSW) return self.fetch(e.request);\n\n  // e.respondWith((\n  //   async () => {\n  //     log('Fetching', url);\n\n  //     const cache = await self.caches.open(self.cacheName);\n  //     const cachedResponse = await cache.match(e.request);\n  //     if (cachedResponse) return cachedResponse;\n  //     const networkResponse = await self.fetch(e.request);\n  //     e.waitUntil(\n  //       cache.put(e.request, networkResponse.clone())\n  //     );\n  //     return networkResponse;\n  //   }\n  // )());\n\n  let cache;\n  log('Fetching', url);\n  e.respondWith(\n    self.caches.open(self.cacheName)\n    .then(cache_ => {\n      cache = cache_;\n      return cache.match(e.request);\n    })\n    .then(cachedResponse => {\n      if (cachedResponse) return cachedResponse;\n      return self.fetch(e.request);\n\n    })\n    .then(networkResponse => {\n      e.waitUntil(\n        cache.put(e.request, networkResponse.clone())\n      );\n      return networkResponse;\n    })\n  );\n\n}\n\n\n","\n/* global self */\n\nimport { onInstall } from './onInstall';\nimport { onActivate } from './onActivate';\nimport { onFetch } from './onFetch';\n\nself.cacheName = 'v1';\n\nself.addEventListener('install', onInstall);\nself.addEventListener('activate', onActivate);\nself.addEventListener('fetch', onFetch);\n\n"]}